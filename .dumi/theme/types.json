{
  "AffirmSheet": [
    {
      "default": "useConfig().elderly",
      "description": "适老模式，开启后不同type的按钮文字和尺寸都会变大",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    }
  ],
  "BackgroundImg": [
    {
      "default": null,
      "description": "图片的props",
      "required": false,
      "identifier": "imgProps",
      "type": "ImageProps"
    },
    {
      "default": null,
      "description": "背景图",
      "required": false,
      "identifier": "img",
      "type": "string"
    },
    {
      "default": null,
      "description": "里层view的props",
      "required": false,
      "identifier": "innerProps",
      "type": "ViewProps"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "BarCode": [
    {
      "default": null,
      "description": "条形码内容",
      "required": true,
      "identifier": "content",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "width",
      "type": "number"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "height",
      "type": "number"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Button": [
    {
      "default": "true",
      "description": "是否是行内元素",
      "required": false,
      "identifier": "block",
      "type": "boolean"
    },
    {
      "default": "normal",
      "description": "按钮大小",
      "required": false,
      "identifier": "size",
      "type": "\"normal\" | \"small\" | \"action\""
    },
    {
      "default": "false",
      "description": "阴影",
      "required": false,
      "identifier": "shadow",
      "type": "boolean"
    },
    {
      "default": "default",
      "description": "类型",
      "required": false,
      "identifier": "type",
      "type": "\"default\" | \"primary\" | \"attract\""
    },
    {
      "default": "false",
      "description": "镂空",
      "required": false,
      "identifier": "ghost",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "图标",
      "required": false,
      "identifier": "icon",
      "type": "ReactNode"
    },
    {
      "default": "false",
      "description": "粗体",
      "required": false,
      "identifier": "bold",
      "type": "boolean"
    },
    {
      "default": "false",
      "description": "禁用",
      "required": false,
      "identifier": "disable",
      "type": "boolean"
    },
    {
      "default": "false",
      "description": "是否是圆形按钮",
      "required": false,
      "identifier": "round",
      "type": "boolean"
    },
    {
      "default": "false",
      "description": "是否是加载状态",
      "required": false,
      "identifier": "loading",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "适老模式，开启后不同type的按钮文字和尺寸都会变大",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    }
  ],
  "Calendar": [
    {
      "default": null,
      "description": "样式类名",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "子项样式类名",
      "required": false,
      "identifier": "itemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "选中的子项样式类名",
      "required": false,
      "identifier": "activeItemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "选中的标记点样式类名",
      "required": false,
      "identifier": "activeDotCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "不可选中的子项样式类名",
      "required": false,
      "identifier": "disableItemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "标记点的类名",
      "required": false,
      "identifier": "dotCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "标记点Wrap的类名",
      "required": false,
      "identifier": "dotWrapCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "选中的日期",
      "required": false,
      "identifier": "current",
      "type": "Dayjs"
    },
    {
      "default": null,
      "description": "选中的日期改变的事件",
      "required": false,
      "identifier": "onChange",
      "type": "(day: Dayjs) => void"
    },
    {
      "default": null,
      "description": "渲染标记点，返回false不显示，可以返回一个元素可以自定义显示",
      "required": false,
      "identifier": "renderDot",
      "type": "(day: Dayjs, index: number) => ReactNode"
    },
    {
      "default": "day => day.isBefore(dayjs(), 'date')",
      "description": "渲染禁止的日期",
      "required": false,
      "identifier": "renderDisable",
      "type": "(day: Dayjs) => boolean"
    },
    {
      "default": "14",
      "description": "日期范围天数",
      "required": false,
      "identifier": "limit",
      "type": "number"
    },
    {
      "default": null,
      "description": "自定义渲染",
      "required": false,
      "identifier": "renderDate",
      "type": "(day: Dayjs) => ReactNode"
    },
    {
      "default": null,
      "description": "自定义渲染item props",
      "required": false,
      "identifier": "renderItemProps",
      "type": "(day: Dayjs) => ViewProps"
    },
    {
      "default": null,
      "description": "设置这个后会渲染成列表模式",
      "required": false,
      "identifier": "listEndDay",
      "type": "Dayjs"
    },
    {
      "default": null,
      "description": "列表模式的月份类名",
      "required": false,
      "identifier": "monthCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "开始时间，默认今天",
      "required": false,
      "identifier": "startDay",
      "type": "Dayjs"
    },
    {
      "default": null,
      "description": "适老模式，开启后尺寸会变大",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Canvas": [],
  "CardTab": [
    {
      "default": null,
      "description": "标签项",
      "required": true,
      "identifier": "tabs",
      "type": "{ content: ReactNode; index: T; }[]"
    },
    {
      "default": null,
      "description": "样式类名",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "子项类名",
      "required": false,
      "identifier": "itemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "当前子项类名",
      "required": false,
      "identifier": "activeItemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "当前tab的索引",
      "required": false,
      "identifier": "current",
      "type": "unknown"
    },
    {
      "default": null,
      "description": "current改变的事件回调",
      "required": false,
      "identifier": "onChange",
      "type": "(current: T) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "是否是受控模式",
      "required": false,
      "identifier": "control",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "类型",
      "required": false,
      "identifier": "type",
      "type": "\"card\""
    }
  ],
  "Chat": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    }
  ],
  "CheckBox": [
    {
      "default": null,
      "description": "当前是否选中",
      "required": false,
      "identifier": "checked",
      "type": "boolean"
    },
    {
      "default": "value",
      "description": "值",
      "required": false,
      "identifier": "value",
      "type": "CheckboxValue"
    },
    {
      "default": "label",
      "description": "checkbox内容",
      "required": false,
      "identifier": "children",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "onchange方法",
      "required": false,
      "identifier": "onChange",
      "type": "(checked: boolean, e?: any, v?: CheckboxValue) => void"
    },
    {
      "default": null,
      "description": "选中时的勾选icon颜色",
      "required": false,
      "identifier": "iconColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "是否是圆型的",
      "required": false,
      "identifier": "isRound",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "选中的类名",
      "required": false,
      "identifier": "activeCls",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "类名",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "type样式",
      "required": false,
      "identifier": "type",
      "type": "\"normal\" | \"button\""
    },
    {
      "default": "false",
      "description": "disabled",
      "required": false,
      "identifier": "disabled",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "ChooseImage": [
    {
      "default": null,
      "description": "接口调用结束的回调函数（调用成功、失败都会执行）",
      "required": false,
      "identifier": "complete",
      "type": "ChooseImageCompleteCallback"
    },
    {
      "default": null,
      "description": "最多可以选择的图片张数",
      "required": false,
      "identifier": "count",
      "type": "number"
    },
    {
      "default": null,
      "description": "接口调用失败的回调函数",
      "required": false,
      "identifier": "fail",
      "type": "ChooseImageFailCallback"
    },
    {
      "default": null,
      "description": "所选的图片的尺寸\n\n可选值：\n- 'original': 原图;\n- 'compressed': 压缩图;",
      "required": false,
      "identifier": "sizeType",
      "type": "(\"original\" | \"compressed\")[]"
    },
    {
      "default": null,
      "description": "选择图片的来源\n\n可选值：\n- 'album': 从相册选图;\n- 'camera': 使用相机;",
      "required": false,
      "identifier": "sourceType",
      "type": "(\"album\" | \"camera\")[]"
    },
    {
      "default": null,
      "description": "接口调用成功的回调函数",
      "required": false,
      "identifier": "success",
      "type": "ChooseImageSuccessCallback"
    }
  ],
  "ColorText": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "文本是否可选",
      "required": false,
      "identifier": "selectable",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "显示下划线",
      "required": false,
      "identifier": "underline",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "自定义颜色",
      "required": false,
      "identifier": "color",
      "type": "string"
    },
    {
      "default": null,
      "description": "字体大小",
      "required": false,
      "identifier": "fontSize",
      "type": "string"
    },
    {
      "default": null,
      "description": "字重",
      "required": false,
      "identifier": "fontWeight",
      "type": "FontWeight"
    }
  ],
  "ConfigProvider": [
    {
      "default": null,
      "description": "主题色",
      "required": false,
      "identifier": "brandPrimary",
      "type": "string"
    },
    {
      "default": null,
      "description": "阴影组件的颜色",
      "required": false,
      "identifier": "shadowColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "适应老模式",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    }
  ],
  "CreateAnimation": [
    {
      "default": null,
      "description": "动画延迟时间，单位 ms",
      "required": false,
      "identifier": "delay",
      "type": "number"
    },
    {
      "default": null,
      "description": "动画持续时间，单位 ms",
      "required": false,
      "identifier": "duration",
      "type": "number"
    },
    {
      "default": null,
      "description": "动画的效果\n\n可选值：\n- 'linear': 动画从头到尾的速度是相同的;\n- 'ease': 动画以低速开始，然后加快，在结束前变慢;\n- 'ease-in': 动画以低速开始;\n- 'ease-in-out': 动画以低速开始和结束;\n- 'ease-out': 动画以低速结束;\n- 'step-start': 动画第一帧就跳至结束状态直到结束;\n- 'step-end': 动画一直保持开始状态，最后一帧跳到结束状态;",
      "required": false,
      "identifier": "timingFunction",
      "type": "\"linear\" | \"ease\" | \"ease-in\" | \"ease-in-out\" | \"ease-out\" | \"step-start\" | \"step-end\""
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "transformOrigin",
      "type": "string"
    }
  ],
  "Debug": [
    {
      "description": "Returns the primitive value of the specified object.",
      "required": false,
      "identifier": "valueOf",
      "type": "() => boolean"
    }
  ],
  "Divider": [
    {
      "default": "false",
      "description": "是否垂直",
      "required": false,
      "identifier": "vertical",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "子元素",
      "required": false,
      "identifier": "children",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "间距大小，字符串可以传入自定义单位，数字默认会转为rpx",
      "required": false,
      "identifier": "size",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "CSS的flex设置",
      "required": false,
      "identifier": "flex",
      "type": "Flex<0 | (string & {})>"
    },
    {
      "default": null,
      "description": "CSS的justify设置",
      "required": false,
      "identifier": "justify",
      "type": "JustifyContent"
    },
    {
      "default": "stretch",
      "description": "CSS的alignItems设置",
      "required": false,
      "identifier": "alignItems",
      "type": "AlignItems"
    },
    {
      "default": null,
      "description": "CSS的alignSelf设置",
      "required": false,
      "identifier": "alignSelf",
      "type": "AlignSelf"
    },
    {
      "default": null,
      "description": "CSS的margin设置",
      "required": false,
      "identifier": "margin",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"auto\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的padding设置",
      "required": false,
      "identifier": "padding",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的flexWrap设置",
      "required": false,
      "identifier": "flexWrap",
      "type": "FlexWrap"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "hidden",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "在一行第几个时不设置size",
      "required": false,
      "identifier": "ignoreNum",
      "type": "number"
    },
    {
      "default": null,
      "description": "由createAnimation创建的动画对象",
      "required": false,
      "identifier": "animation",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "颜色",
      "required": false,
      "identifier": "color",
      "type": "string"
    }
  ],
  "DropDownMenu": [
    {
      "default": null,
      "description": "外层样式",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": "true",
      "description": "是否显示modal框",
      "required": false,
      "identifier": "showModal",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "当弹出层隐藏显示的回调",
      "required": false,
      "identifier": "onOpsVisible",
      "type": "(visible: boolean, index: number) => void"
    },
    {
      "default": null,
      "description": "手动控制所有的弹出层显示的索引",
      "required": false,
      "identifier": "opsVisibleIndex",
      "type": "number"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "DropDownMenuItem": [
    {
      "default": null,
      "description": "外层样式",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "子项目样式",
      "required": false,
      "identifier": "itemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "子项目选中样式",
      "required": false,
      "identifier": "itemSelectCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "当前所选值",
      "required": false,
      "identifier": "value",
      "type": "any"
    },
    {
      "default": null,
      "description": "显示的标题",
      "required": false,
      "identifier": "title",
      "type": "string"
    },
    {
      "default": null,
      "description": "所有选项",
      "required": false,
      "identifier": "options",
      "type": "{ text: string; value: any; }[]"
    },
    {
      "default": null,
      "description": "如果传递option值，发生变化会获得value值",
      "required": false,
      "identifier": "onChange",
      "type": "(val: any, item: { text: string; value: any; }) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "icon",
      "type": "IconNames"
    },
    {
      "default": null,
      "description": "箭头的类名",
      "required": false,
      "identifier": "arrowsCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "箭头的颜色",
      "required": false,
      "identifier": "arrowsColor",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "arrowsSize",
      "type": "number"
    },
    {
      "default": null,
      "description": "标题类名",
      "required": false,
      "identifier": "titleCls",
      "type": "string"
    }
  ],
  "Exceed": [
    {
      "default": "2",
      "description": "超过多少行显示省略号",
      "required": false,
      "identifier": "clamp",
      "type": "number"
    },
    {
      "default": null,
      "description": "自定义省略号",
      "required": false,
      "identifier": "more",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "更多节点的类名",
      "required": false,
      "identifier": "moreCls",
      "type": "string"
    },
    {
      "default": "#fff",
      "description": "更多节点的背景色",
      "required": false,
      "identifier": "moreBg",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "F2": [
    {
      "default": null,
      "description": "数据",
      "required": false,
      "identifier": "data",
      "type": "Data<T>"
    },
    {
      "default": null,
      "description": "设置图表",
      "required": true,
      "identifier": "setChart",
      "type": "(chart: Chart<T>) => void"
    },
    {
      "default": null,
      "description": "初始化参数",
      "required": false,
      "identifier": "initParams",
      "type": "ChartParams"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    }
  ],
  "Fixed": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "placeholder",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Fold": [
    {
      "default": "false",
      "description": "是否折叠",
      "required": false,
      "identifier": "folded",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "手动设置高度",
      "required": false,
      "identifier": "maxHeight",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Form": [
    {
      "default": null,
      "description": "子项的类名",
      "required": false,
      "identifier": "itemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "子项的样式",
      "required": false,
      "identifier": "itemStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "子项children的样式",
      "required": false,
      "identifier": "itemChildrenStyle",
      "type": "CSSProperties"
    },
    {
      "default": "true",
      "description": "卡片模式",
      "required": false,
      "identifier": "card",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "shadow组件的props",
      "required": false,
      "identifier": "shadowProps",
      "type": "false | Omit<Props, \"children\">"
    },
    {
      "default": null,
      "description": "绑定的数据",
      "required": false,
      "identifier": "values",
      "type": "{}"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "initialValues",
      "type": "Store"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "form",
      "type": "FormInstance<{}>"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onValuesChange",
      "type": "(changedValues: any, values: {}) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onFinishFailed",
      "type": "(errorInfo: ValidateErrorEntity<{}>) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onFinish",
      "type": "(values: {}) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "校验规则",
      "required": false,
      "identifier": "rules",
      "type": "Rule[]"
    },
    {
      "default": null,
      "description": "后面的节点",
      "required": false,
      "identifier": "after",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "是否垂直",
      "required": false,
      "identifier": "vertical",
      "type": "boolean"
    },
    {
      "default": "true",
      "description": "显示必填*号",
      "required": false,
      "identifier": "requiredMark",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "只读模式",
      "required": false,
      "identifier": "readOnly",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "不需要样式",
      "required": false,
      "identifier": "noStyle",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "label类名",
      "required": false,
      "identifier": "labelCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "label样式",
      "required": false,
      "identifier": "labelStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "子元素类别",
      "required": false,
      "identifier": "childrenCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "必填标记类名",
      "required": false,
      "identifier": "requiredMarkCls",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "afterCls",
      "type": "string"
    },
    {
      "default": "right",
      "description": "label的对齐",
      "required": false,
      "identifier": "labelJustify",
      "type": "TextAlign"
    },
    {
      "default": "right",
      "description": "children的对齐",
      "required": false,
      "identifier": "childrenAlign",
      "type": "TextAlign"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "cell",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "显示冒号",
      "required": false,
      "identifier": "colon",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "冒号的类名",
      "required": false,
      "identifier": "colonCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "label的宽度，建议使用em单位",
      "required": false,
      "identifier": "labelWidth",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "适老模式，开启后尺寸会变大",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    }
  ],
  "FormItem": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "name",
      "type": "NamePath"
    },
    {
      "default": null,
      "description": "Set up `dependencies` field.\nWhen dependencies field update and current field is touched,\nwill trigger validate rules and render.",
      "required": false,
      "identifier": "dependencies",
      "type": "NamePath[]"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "getValueFromEvent",
      "type": "(...args: EventArgs) => any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "normalize",
      "type": "(value: any, prevValue: any, allValues: Store) => any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "shouldUpdate",
      "type": "ShouldUpdate<any>"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "trigger",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "validateTrigger",
      "type": "string | false | string[]"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "validateFirst",
      "type": "boolean | \"parallel\""
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "valuePropName",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "getValueProps",
      "type": "(value: any) => object"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "messageVariables",
      "type": "Record<string, string>"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "initialValue",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onReset",
      "type": "() => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onMetaChange",
      "type": "(meta: Meta & { destroy?: boolean; }) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "preserve",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "@private Passed by Form.List props. Do not use since it will break by path check.",
      "required": false,
      "identifier": "isListField",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "@private Passed by Form.List props. Do not use since it will break by path check.",
      "required": false,
      "identifier": "isList",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "校验规则",
      "required": false,
      "identifier": "rules",
      "type": "Rule[]"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "label",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "后面的节点",
      "required": false,
      "identifier": "after",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "是否垂直",
      "required": false,
      "identifier": "vertical",
      "type": "boolean"
    },
    {
      "default": "true",
      "description": "显示必填*号",
      "required": false,
      "identifier": "requiredMark",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "只读模式",
      "required": false,
      "identifier": "readOnly",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "不需要样式",
      "required": false,
      "identifier": "noStyle",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "label类名",
      "required": false,
      "identifier": "labelCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "label样式",
      "required": false,
      "identifier": "labelStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "子元素类别",
      "required": false,
      "identifier": "childrenCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "必填标记类名",
      "required": false,
      "identifier": "requiredMarkCls",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "afterCls",
      "type": "string"
    },
    {
      "default": "label",
      "description": "字符串的label，用于提示",
      "required": false,
      "identifier": "strLabel",
      "type": "string"
    },
    {
      "default": "right",
      "description": "label的对齐",
      "required": false,
      "identifier": "labelJustify",
      "type": "TextAlign"
    },
    {
      "default": "right",
      "description": "children的对齐",
      "required": false,
      "identifier": "childrenAlign",
      "type": "TextAlign"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "cell",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "显示冒号",
      "required": false,
      "identifier": "colon",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "冒号的类名",
      "required": false,
      "identifier": "colonCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "label的宽度，建议使用em单位",
      "required": false,
      "identifier": "labelWidth",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "渲染只读时的值",
      "required": false,
      "identifier": "renderReadOnlyValue",
      "type": "(value: any, values: any) => ReactNode"
    },
    {
      "default": null,
      "description": "适老模式，开启后尺寸会变大",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    }
  ],
  "GetAddress": [
    {
      "default": null,
      "description": "Gets or sets the length of the array. This is a number one higher than the highest index in the array.",
      "required": true,
      "identifier": "length",
      "type": "number"
    },
    {
      "description": "Returns a string representation of an array.",
      "required": false,
      "identifier": "toString",
      "type": "() => string"
    },
    {
      "description": "Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",
      "required": false,
      "identifier": "toLocaleString",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",
      "required": true,
      "identifier": "pop",
      "type": "() => string | number"
    },
    {
      "default": null,
      "description": "Appends new elements to the end of an array, and returns the new length of the array.\n@param items New elements to add to the array.",
      "required": true,
      "identifier": "push",
      "type": "(...items: (string | number)[]) => number"
    },
    {
      "default": null,
      "description": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays.\n@param items Additional arrays and/or items to add to the end of the array.\n@param items Additional arrays and/or items to add to the end of the array.",
      "required": true,
      "identifier": "concat",
      "type": "{ (...items: ConcatArray<string | number>[]): (string | number)[]; (...items: (string | number | ConcatArray<string | number>)[]): (string | number)[]; }"
    },
    {
      "default": null,
      "description": "Adds all the elements of an array into a string, separated by the specified separator string.\n@param separator A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma.",
      "required": true,
      "identifier": "join",
      "type": "(separator?: string) => string"
    },
    {
      "default": null,
      "description": "Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array.",
      "required": true,
      "identifier": "reverse",
      "type": "() => (string | number)[]"
    },
    {
      "default": null,
      "description": "Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",
      "required": true,
      "identifier": "shift",
      "type": "() => string | number"
    },
    {
      "default": null,
      "description": "Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array.\n@param start The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0.\n@param end The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array.",
      "required": true,
      "identifier": "slice",
      "type": "(start?: number, end?: number) => (string | number)[]"
    },
    {
      "default": null,
      "description": "Sorts an array in place.\nThis method mutates the array and returns a reference to the same array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\na negative value if first argument is less than second argument, zero if they're equal and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```",
      "required": true,
      "identifier": "sort",
      "type": "(compareFn?: (a: string | number, b: string | number) => number) => (string | number)[]"
    },
    {
      "default": null,
      "description": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@returns An array containing the elements that were deleted.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.\n@returns An array containing the elements that were deleted.",
      "required": true,
      "identifier": "splice",
      "type": "{ (start: number, deleteCount?: number): (string | number)[]; (start: number, deleteCount: number, ...items: (string | number)[]): (string | number)[]; }"
    },
    {
      "default": null,
      "description": "Inserts new elements at the start of an array, and returns the new length of the array.\n@param items Elements to insert at the start of the array.",
      "required": true,
      "identifier": "unshift",
      "type": "(...items: (string | number)[]) => number"
    },
    {
      "default": null,
      "description": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",
      "required": true,
      "identifier": "indexOf",
      "type": "(searchElement: string | number, fromIndex?: number) => number"
    },
    {
      "default": null,
      "description": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array.",
      "required": true,
      "identifier": "lastIndexOf",
      "type": "(searchElement: string | number, fromIndex?: number) => number"
    },
    {
      "default": null,
      "description": "Determines whether all the members of an array satisfy the specified test.\n@param predicate A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n@param predicate A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.",
      "required": true,
      "identifier": "every",
      "type": "{ <S extends string | number>(predicate: (value: string | number, index: number, array: (string | number)[]) => value is S, thisArg?: any): this is S[]; (predicate: (value: string | number, index: number, array: (string | number)[]) => unknown, thisArg?: any): boolean; }"
    },
    {
      "default": null,
      "description": "Determines whether the specified callback function returns true for any element of an array.\n@param predicate A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.",
      "required": true,
      "identifier": "some",
      "type": "(predicate: (value: string | number, index: number, array: (string | number)[]) => unknown, thisArg?: any) => boolean"
    },
    {
      "default": null,
      "description": "Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",
      "required": true,
      "identifier": "forEach",
      "type": "(callbackfn: (value: string | number, index: number, array: (string | number)[]) => void, thisArg?: any) => void"
    },
    {
      "default": null,
      "description": "Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",
      "required": true,
      "identifier": "map",
      "type": "<U>(callbackfn: (value: string | number, index: number, array: (string | number)[]) => U, thisArg?: any) => U[]"
    },
    {
      "default": null,
      "description": "Returns the elements of an array that meet the condition specified in a callback function.\n@param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n@param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.",
      "required": true,
      "identifier": "filter",
      "type": "{ <S extends string | number>(predicate: (value: string | number, index: number, array: (string | number)[]) => value is S, thisArg?: any): S[]; (predicate: (value: string | number, index: number, array: (string | number)[]) => unknown, thisArg?: any): (string | number)[]; }"
    },
    {
      "default": null,
      "description": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",
      "required": true,
      "identifier": "reduce",
      "type": "{ (callbackfn: (previousValue: string | number, currentValue: string | number, currentIndex: number, array: (string | number)[]) => string | number): string | number; (callbackfn: (previousValue: string | number, currentValue: string | number, currentIndex: number, array: (string | number)[]) => string | number, ini..."
    },
    {
      "default": null,
      "description": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",
      "required": true,
      "identifier": "reduceRight",
      "type": "{ (callbackfn: (previousValue: string | number, currentValue: string | number, currentIndex: number, array: (string | number)[]) => string | number): string | number; (callbackfn: (previousValue: string | number, currentValue: string | number, currentIndex: number, array: (string | number)[]) => string | number, ini..."
    },
    {
      "default": null,
      "description": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.",
      "required": true,
      "identifier": "find",
      "type": "{ <S extends string | number>(predicate: (this: void, value: string | number, index: number, obj: (string | number)[]) => value is S, thisArg?: any): S; (predicate: (value: string | number, index: number, obj: (string | number)[]) => unknown, thisArg?: any): string | number; }"
    },
    {
      "default": null,
      "description": "Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.",
      "required": true,
      "identifier": "findIndex",
      "type": "(predicate: (value: string | number, index: number, obj: (string | number)[]) => unknown, thisArg?: any) => number"
    },
    {
      "default": null,
      "description": "Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\nlength+end.",
      "required": true,
      "identifier": "fill",
      "type": "(value: string | number, start?: number, end?: number) => (string | number)[]"
    },
    {
      "default": null,
      "description": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\nlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",
      "required": true,
      "identifier": "copyWithin",
      "type": "(target: number, start: number, end?: number) => (string | number)[]"
    },
    {
      "default": null,
      "description": "Iterator",
      "required": true,
      "identifier": "__@iterator",
      "type": "() => IterableIterator<string | number>"
    },
    {
      "default": null,
      "description": "Returns an iterable of key, value pairs for every entry in the array",
      "required": true,
      "identifier": "entries",
      "type": "() => IterableIterator<[number, string | number]>"
    },
    {
      "default": null,
      "description": "Returns an iterable of keys in the array",
      "required": true,
      "identifier": "keys",
      "type": "() => IterableIterator<number>"
    },
    {
      "default": null,
      "description": "Returns an iterable of values in the array",
      "required": true,
      "identifier": "values",
      "type": "() => IterableIterator<string | number>"
    },
    {
      "default": null,
      "description": "Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",
      "required": true,
      "identifier": "__@unscopables",
      "type": "() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"
    },
    {
      "default": null,
      "description": "Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",
      "required": true,
      "identifier": "includes",
      "type": "(searchElement: string | number, fromIndex?: number) => boolean"
    }
  ],
  "GetAddressId": [
    {
      "description": "Returns a string representation of a string.",
      "required": false,
      "identifier": "toString",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",
      "required": true,
      "identifier": "charAt",
      "type": "(pos: number) => string"
    },
    {
      "default": null,
      "description": "Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",
      "required": true,
      "identifier": "charCodeAt",
      "type": "(index: number) => number"
    },
    {
      "default": null,
      "description": "Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",
      "required": true,
      "identifier": "concat",
      "type": "(...strings: string[]) => string"
    },
    {
      "default": null,
      "description": "Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",
      "required": true,
      "identifier": "indexOf",
      "type": "(searchString: string, position?: number) => number"
    },
    {
      "default": null,
      "description": "Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",
      "required": true,
      "identifier": "lastIndexOf",
      "type": "(searchString: string, position?: number) => number"
    },
    {
      "default": null,
      "description": "Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",
      "required": true,
      "identifier": "localeCompare",
      "type": "{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"
    },
    {
      "default": null,
      "description": "Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",
      "required": true,
      "identifier": "match",
      "type": "{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"
    },
    {
      "default": null,
      "description": "Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",
      "required": true,
      "identifier": "replace",
      "type": "{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"
    },
    {
      "default": null,
      "description": "Finds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",
      "required": true,
      "identifier": "search",
      "type": "{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"
    },
    {
      "default": null,
      "description": "Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.",
      "required": true,
      "identifier": "slice",
      "type": "(start?: number, end?: number) => string"
    },
    {
      "default": null,
      "description": "Split a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",
      "required": true,
      "identifier": "split",
      "type": "{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"
    },
    {
      "default": null,
      "description": "Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.",
      "required": true,
      "identifier": "substring",
      "type": "(start: number, end?: number) => string"
    },
    {
      "default": null,
      "description": "Converts all the alphabetic characters in a string to lowercase.",
      "required": true,
      "identifier": "toLowerCase",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",
      "required": true,
      "identifier": "toLocaleLowerCase",
      "type": "(locales?: string | string[]) => string"
    },
    {
      "default": null,
      "description": "Converts all the alphabetic characters in a string to uppercase.",
      "required": true,
      "identifier": "toUpperCase",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",
      "required": true,
      "identifier": "toLocaleUpperCase",
      "type": "(locales?: string | string[]) => string"
    },
    {
      "default": null,
      "description": "Removes the leading and trailing white space and line terminator characters from a string.",
      "required": true,
      "identifier": "trim",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns the length of a String object.",
      "required": true,
      "identifier": "length",
      "type": "number"
    },
    {
      "default": null,
      "description": "Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",
      "required": true,
      "identifier": "substr",
      "type": "(from: number, length?: number) => string"
    },
    {
      "description": "Returns the primitive value of the specified object.",
      "required": false,
      "identifier": "valueOf",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",
      "required": true,
      "identifier": "codePointAt",
      "type": "(pos: number) => number"
    },
    {
      "default": null,
      "description": "Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",
      "required": true,
      "identifier": "includes",
      "type": "(searchString: string, position?: number) => boolean"
    },
    {
      "default": null,
      "description": "Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false.",
      "required": true,
      "identifier": "endsWith",
      "type": "(searchString: string, endPosition?: number) => boolean"
    },
    {
      "default": null,
      "description": "Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\nis \"NFC\"\n@param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\nis \"NFC\"",
      "required": true,
      "identifier": "normalize",
      "type": "{ (form: \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\"): string; (form?: string): string; }"
    },
    {
      "default": null,
      "description": "Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",
      "required": true,
      "identifier": "repeat",
      "type": "(count: number) => string"
    },
    {
      "default": null,
      "description": "Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",
      "required": true,
      "identifier": "startsWith",
      "type": "(searchString: string, position?: number) => boolean"
    },
    {
      "default": null,
      "description": "Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@param name",
      "required": true,
      "identifier": "anchor",
      "type": "(name: string) => string"
    },
    {
      "default": null,
      "description": "Returns a `<big>` HTML element",
      "required": true,
      "identifier": "big",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<blink>` HTML element",
      "required": true,
      "identifier": "blink",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<b>` HTML element",
      "required": true,
      "identifier": "bold",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<tt>` HTML element",
      "required": true,
      "identifier": "fixed",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<font>` HTML element and sets the color attribute value",
      "required": true,
      "identifier": "fontcolor",
      "type": "(color: string) => string"
    },
    {
      "default": null,
      "description": "Returns a `<font>` HTML element and sets the size attribute value",
      "required": true,
      "identifier": "fontsize",
      "type": "{ (size: number): string; (size: string): string; }"
    },
    {
      "default": null,
      "description": "Returns an `<i>` HTML element",
      "required": true,
      "identifier": "italics",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns an `<a>` HTML element and sets the href attribute value",
      "required": true,
      "identifier": "link",
      "type": "(url: string) => string"
    },
    {
      "default": null,
      "description": "Returns a `<small>` HTML element",
      "required": true,
      "identifier": "small",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<strike>` HTML element",
      "required": true,
      "identifier": "strike",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<sub>` HTML element",
      "required": true,
      "identifier": "sub",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<sup>` HTML element",
      "required": true,
      "identifier": "sup",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Iterator",
      "required": true,
      "identifier": "__@iterator",
      "type": "() => IterableIterator<string>"
    },
    {
      "default": null,
      "description": "Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string's length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is \" \" (U+0020).",
      "required": true,
      "identifier": "padStart",
      "type": "(maxLength: number, fillString?: string) => string"
    },
    {
      "default": null,
      "description": "Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string's length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is \" \" (U+0020).",
      "required": true,
      "identifier": "padEnd",
      "type": "(maxLength: number, fillString?: string) => string"
    },
    {
      "default": null,
      "description": "Removes whitespace from the left end of a string.",
      "required": true,
      "identifier": "trimLeft",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Removes whitespace from the right end of a string.",
      "required": true,
      "identifier": "trimRight",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a copy with leading whitespace removed.",
      "required": true,
      "identifier": "trimStart",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a copy with trailing whitespace removed.",
      "required": true,
      "identifier": "trimEnd",
      "type": "() => string"
    }
  ],
  "GetLocation": [
    {
      "default": null,
      "description": "需要基础库： `1.6.0`\n\n传入 true 会返回高度信息，由于获取高度需要较高精确度，会减慢接口返回速度",
      "required": false,
      "identifier": "altitude",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "接口调用结束的回调函数（调用成功、失败都会执行）",
      "required": false,
      "identifier": "complete",
      "type": "GetLocationCompleteCallback"
    },
    {
      "default": null,
      "description": "接口调用失败的回调函数",
      "required": false,
      "identifier": "fail",
      "type": "GetLocationFailCallback"
    },
    {
      "default": null,
      "description": "需要基础库： `2.9.0`\n\n高精度定位超时时间(ms)，指定时间内返回最高精度，该值3000ms以上高精度定位才有效果",
      "required": false,
      "identifier": "highAccuracyExpireTime",
      "type": "number"
    },
    {
      "default": null,
      "description": "需要基础库： `2.9.0`\n\n开启高精度定位",
      "required": false,
      "identifier": "isHighAccuracy",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "接口调用成功的回调函数",
      "required": false,
      "identifier": "success",
      "type": "GetLocationSuccessCallback"
    },
    {
      "default": null,
      "description": "wgs84 返回 gps 坐标，gcj02 返回可用于 wx.openLocation 的坐标",
      "required": false,
      "identifier": "type",
      "type": "string"
    }
  ],
  "Icon": [
    {
      "default": null,
      "description": "图标大小，默认是fontSize的值，传入number的话请输入rpx的值",
      "required": false,
      "identifier": "size",
      "type": "string | number"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": null,
      "required": true,
      "identifier": "name",
      "type": "IconFontNames"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "color",
      "type": "string | string[]"
    }
  ],
  "Image": [
    {
      "default": null,
      "description": "占位图片",
      "required": false,
      "identifier": "placeholder",
      "type": "string | false"
    },
    {
      "default": "true",
      "description": "支持预览",
      "required": false,
      "identifier": "preview",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "当图片载入完毕时触发",
      "required": false,
      "identifier": "onLoad",
      "type": "(e: Event) => void"
    },
    {
      "default": null,
      "description": "当错误发生时触发",
      "required": false,
      "identifier": "onError",
      "type": "(e: Event) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "图片资源地址",
      "required": false,
      "identifier": "src",
      "type": "string"
    },
    {
      "default": null,
      "description": "图片裁剪、缩放的模式",
      "required": false,
      "identifier": "mode",
      "type": "\"scaleToFill\" | \"aspectFit\" | \"aspectFill\" | \"widthFix\" | \"top\" | \"bottom\" | \"center\" | \"left\" | \"right\" | \"top left\" | \"top right\" | \"bottom left\" | \"bottom right\""
    }
  ],
  "Indexes": [
    {
      "default": null,
      "description": "渲染列表项，index为需要索引的内容\n@param data",
      "required": true,
      "identifier": "renderItem",
      "type": "(data: D) => { index: string; node: ReactNode; }"
    },
    {
      "default": null,
      "description": "列表",
      "required": true,
      "identifier": "list",
      "type": "D[]"
    },
    {
      "default": null,
      "description": "索引的类名",
      "required": false,
      "identifier": "indexCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "(default: false) 允许横向滚动 1.0.0",
      "required": false,
      "identifier": "scrollX",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: false) 允许纵向滚动 1.0.0",
      "required": false,
      "identifier": "scrollY",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: 50) 距顶部/左边多远时，触发 scrolltoupper 事件 1.0.0",
      "required": false,
      "identifier": "upperThreshold",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "(default: 50) 距底部/右边多远时，触发 scrolltolower 事件 1.0.0",
      "required": false,
      "identifier": "lowerThreshold",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "设置竖向滚动条位置 1.0.0",
      "required": false,
      "identifier": "scrollTop",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "设置横向滚动条位置 1.0.0",
      "required": false,
      "identifier": "scrollLeft",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "值应为某子元素id（id不能以数字开头）。设置哪个方向可滚动，则在哪个方向滚动到该元素 1.0.0",
      "required": false,
      "identifier": "scrollIntoView",
      "type": "string"
    },
    {
      "default": null,
      "description": "(default: false) 在设置滚动条位置时使用动画过渡 1.0.0",
      "required": false,
      "identifier": "scrollWithAnimation",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: false) iOS点击顶部状态栏、安卓双击标题栏时，滚动条返回顶部，只支持竖向 1.0.0",
      "required": false,
      "identifier": "enableBackToTop",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: false) 启用 flexbox 布局。开启后，当前节点声明了 display: flex 就会成为 flex container，并作用于其孩子节点。 2.7.3",
      "required": false,
      "identifier": "enableFlex",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "滚动到顶部/左边时触发 1.0.0",
      "required": false,
      "identifier": "onScrollToUpper",
      "type": "(event: GenericEvent<any>) => any"
    },
    {
      "default": null,
      "description": "滚动到底部/右边时触发 1.0.0",
      "required": false,
      "identifier": "onScrollToLower",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "滚动时触发，event.detail = {scrollLeft, scrollTop, scrollHeight, scrollWidth, deltaX, deltaY} 1.0.0",
      "required": false,
      "identifier": "onScroll",
      "type": "(event: GenericEvent<any>) => any"
    },
    {
      "default": null,
      "description": "开启 scroll anchoring 特性，即控制滚动位置不随内容变化而抖动，仅在 iOS 下生效，安卓下可参考 CSS overflow-anchor 属性。\t2.8.2",
      "required": false,
      "identifier": "scrollAnchoring",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "开启自定义下拉刷新\t2.10.1",
      "required": false,
      "identifier": "refresherEnabled",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "设置自定义下拉刷新阈值\t2.10.1",
      "required": false,
      "identifier": "refresherThreshold",
      "type": "number"
    },
    {
      "default": null,
      "description": "设置自定义下拉刷新默认样式，支持设置 black | white | none， none 表示不使用默认样式\t2.10.1",
      "required": false,
      "identifier": "refresherDefaultStyle",
      "type": "string"
    },
    {
      "default": null,
      "description": "设置自定义下拉刷新区域背景颜色\t2.10.1",
      "required": false,
      "identifier": "refresherBackground",
      "type": "string"
    },
    {
      "default": null,
      "description": "设置当前下拉刷新状态，true 表示下拉刷新已经被触发，false 表示下拉刷新未被触发\t2.10.1",
      "required": false,
      "identifier": "refresherTriggered",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "自定义下拉刷新控件被下拉\t2.10.1",
      "required": false,
      "identifier": "onRefresherPulling",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "自定义下拉刷新被触发\t2.10.1",
      "required": false,
      "identifier": "onRefresherRefresh",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "自定义下拉刷新被复位\t2.10.1",
      "required": false,
      "identifier": "onRefresherRestore",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "自定义下拉刷新被中止 2.10.1",
      "required": false,
      "identifier": "onRefresherAbort",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "(default: false) 启用 scroll-view 增强特性 2.12.0",
      "required": false,
      "identifier": "enhanced",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: true) iOS 下 scroll-view 边界弹性控制 (同时开启 enhanced 属性后生效) 2.12.0",
      "required": false,
      "identifier": "bounces",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: true) 滚动条显隐控制 (同时开启 enhanced 属性后生效) 2.12.0",
      "required": false,
      "identifier": "showScrollbar",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: false) 分页滑动效果 (同时开启 enhanced 属性后生效) 2.12.0",
      "required": false,
      "identifier": "pagingEnabled",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: false) 滑动减速速率控制 (同时开启 enhanced 属性后生效) 2.12.0",
      "required": false,
      "identifier": "fastDeceleration",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "滑动开始事件 (同时开启 enhanced 属性后生效) detail { scrollTop, scrollLeft } 2.12.0",
      "required": false,
      "identifier": "onDragStart",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "滑动事件 (同时开启 enhanced 属性后生效) detail { scrollTop, scrollLeft } 2.12.0",
      "required": false,
      "identifier": "onDragging",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "滑动结束事件 (同时开启 enhanced 属性后生效) detail { scrollTop, scrollLeft, velocity } 2.12.0",
      "required": false,
      "identifier": "onDragEnd",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "组件的样式类: 在对应的 WXSS 中定义的样式类",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "组件的内联样式: 可以动态设置的内联样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "组件是否显示: 所有组件默认显示",
      "required": false,
      "identifier": "hidden",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "动画对象: 由`wx.createAnimation`创建",
      "required": false,
      "identifier": "animation",
      "type": "Record<string, any>[]"
    },
    {
      "default": null,
      "description": "点击时触发",
      "required": false,
      "identifier": "onClick",
      "type": "(event: TouchEvent<Touch>) => void"
    },
    {
      "default": null,
      "description": "手指触摸后，超过350ms再离开，如果指定了事件回调函数并触发了这个事件，tap事件将不被触发",
      "required": false,
      "identifier": "onLongPress",
      "type": "(event: TouchEvent<Touch>) => void"
    },
    {
      "default": null,
      "description": "会在 WXSS transition 或 wx.createAnimation 动画结束后触发",
      "required": false,
      "identifier": "onTransitionEnd",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "会在一个 WXSS animation 动画开始时触发",
      "required": false,
      "identifier": "onAnimationStart",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "会在一个 WXSS animation 一次迭代结束时触发",
      "required": false,
      "identifier": "onAnimationiteration",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "会在一个 WXSS animation 动画完成时触发",
      "required": false,
      "identifier": "onAnimationEnd",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "在支持 3D Touch 的 iPhone 设备，重按时会触发",
      "required": false,
      "identifier": "onTouchForceChange",
      "type": "(event: TouchEvent<Touch>) => void"
    },
    {
      "default": null,
      "description": "点击时触发同时阻止事件冒泡",
      "required": false,
      "identifier": "catchClick",
      "type": "(event: any) => any"
    }
  ],
  "InputNumber": [
    {
      "default": "Number.MIN_SAFE_INTEGER",
      "description": "最小值",
      "required": false,
      "identifier": "min",
      "type": "number"
    },
    {
      "default": "Number.MAX_SAFE_INTEGER",
      "description": "最大值",
      "required": false,
      "identifier": "max",
      "type": "number"
    },
    {
      "default": null,
      "description": "当前值",
      "required": false,
      "identifier": "value",
      "type": "number"
    },
    {
      "default": "1",
      "description": "每次改变步数，可以为小数",
      "required": false,
      "identifier": "step",
      "type": "number"
    },
    {
      "default": "1",
      "description": "显示的单位",
      "required": false,
      "identifier": "unit",
      "type": "string"
    },
    {
      "default": "0",
      "description": "初始值",
      "required": false,
      "identifier": "defaultValue",
      "type": "number"
    },
    {
      "default": null,
      "description": "变化时回调函数",
      "required": false,
      "identifier": "onChange",
      "type": "(val: number) => void"
    },
    {
      "default": "false",
      "description": "是否禁用",
      "required": false,
      "identifier": "disabled",
      "type": "boolean"
    },
    {
      "default": "transparent",
      "description": "禁用icon的颜色",
      "required": false,
      "identifier": "disabledColor",
      "type": "string"
    },
    {
      "default": "主题色",
      "description": "icon的默认颜色",
      "required": false,
      "identifier": "iconColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "格式化样式",
      "required": false,
      "identifier": "formatValue",
      "type": "(val: any) => string | number"
    },
    {
      "default": null,
      "description": "外层样式",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "icon的样式",
      "required": false,
      "identifier": "iconCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "数字的样式",
      "required": false,
      "identifier": "numberCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "禁用时数字的样式",
      "required": false,
      "identifier": "numberDisabledCls",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Jigsaw": [
    {
      "default": "620",
      "description": "宽度",
      "required": false,
      "identifier": "width",
      "type": "number"
    },
    {
      "default": "310",
      "description": "高度",
      "required": false,
      "identifier": "height",
      "type": "number"
    },
    {
      "default": null,
      "description": "图库",
      "required": true,
      "identifier": "imgs",
      "type": "string[]"
    },
    {
      "default": null,
      "description": "成功回调",
      "required": false,
      "identifier": "onSuccess",
      "type": "() => void"
    },
    {
      "default": null,
      "description": "失败回调",
      "required": false,
      "identifier": "onFail",
      "type": "() => void"
    },
    {
      "default": null,
      "description": "刷新回调",
      "required": false,
      "identifier": "onRefresh",
      "type": "() => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "ref",
      "type": "Ref<unknown>"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "key",
      "type": "Key"
    }
  ],
  "List": [
    {
      "default": null,
      "description": "渲染子项",
      "required": true,
      "identifier": "renderItem",
      "type": "(data: D, index: number, list: D[]) => ReactElement<any, string | JSXElementConstructor<any>>"
    },
    {
      "default": null,
      "description": "列表接口",
      "required": true,
      "identifier": "getList",
      "type": "LoadMoreGetListFn<D>"
    },
    {
      "default": null,
      "description": "没有更多时的空占位",
      "required": false,
      "identifier": "noMore",
      "type": "ReactNode"
    },
    {
      "default": "useMemo(() => <NoData />, [])",
      "description": "没有数据时的空占位",
      "required": false,
      "identifier": "noData",
      "type": "ReactNode"
    },
    {
      "default": "<Loading top/>",
      "description": "加载中的提示元素",
      "required": false,
      "identifier": "loadingTip",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "渲染每项的高度，设置后可以开启虚拟滚动，请传入rpx的number值",
      "required": false,
      "identifier": "renderItemHeight",
      "type": "(data: D, index: number) => number"
    },
    {
      "default": null,
      "description": "样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "类名",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": "10",
      "description": null,
      "required": false,
      "identifier": "defaultLimit",
      "type": "number"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "defaultPage",
      "type": "number"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "needGet",
      "type": "boolean"
    },
    {
      "default": "process.env.REMAX_PLATFORM === 'wechat'\n        ? // eslint-disable-next-line\n          // @ts-ignore\n          getCurrentPages()[getCurrentPages().length - 1].pageId\n        : window.location.pathname",
      "description": null,
      "required": false,
      "identifier": "cacheKey",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "自定义的设置loading",
      "required": false,
      "identifier": "customSetLoading",
      "type": "(loading: boolean) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "ref",
      "type": "Ref<{ refreshList: (retainList?: boolean) => Promise<void>; }>"
    }
  ],
  "ListItem": [
    {
      "default": null,
      "description": "图片",
      "required": false,
      "identifier": "img",
      "type": "string"
    },
    {
      "default": null,
      "description": "图片类名",
      "required": false,
      "identifier": "imgCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "图片下面的部分",
      "required": false,
      "identifier": "imgFooter",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "图片下面的部分的类名",
      "required": false,
      "identifier": "imgFooterCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "左边SpaceProps",
      "required": false,
      "identifier": "leftSpaceProps",
      "type": "Props"
    },
    {
      "default": null,
      "description": "右边SpaceProps",
      "required": false,
      "identifier": "rightSpaceProps",
      "type": "Props"
    },
    {
      "default": null,
      "description": "title类名",
      "required": false,
      "identifier": "titleCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "右边文字第一行",
      "required": false,
      "identifier": "title",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "subtitle类名",
      "required": false,
      "identifier": "subtitleCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "title里的小文字",
      "required": false,
      "identifier": "subtitle",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "text类名",
      "required": false,
      "identifier": "textCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "text，右边文字第二行",
      "required": false,
      "identifier": "text",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "footer类名",
      "required": false,
      "identifier": "footerCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "右边文字最后一行",
      "required": false,
      "identifier": "footer",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "最右边的地方",
      "required": false,
      "identifier": "after",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "最右边的地方的类名",
      "required": false,
      "identifier": "afterCls",
      "type": "ReactNode"
    },
    {
      "default": "false",
      "description": "是否垂直",
      "required": false,
      "identifier": "vertical",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "子元素",
      "required": false,
      "identifier": "children",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "间距大小，字符串可以传入自定义单位，数字默认会转为rpx",
      "required": false,
      "identifier": "size",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "CSS的flex设置",
      "required": false,
      "identifier": "flex",
      "type": "Flex<0 | (string & {})>"
    },
    {
      "default": null,
      "description": "CSS的justify设置",
      "required": false,
      "identifier": "justify",
      "type": "JustifyContent"
    },
    {
      "default": "stretch",
      "description": "CSS的alignItems设置",
      "required": false,
      "identifier": "alignItems",
      "type": "AlignItems"
    },
    {
      "default": null,
      "description": "CSS的alignSelf设置",
      "required": false,
      "identifier": "alignSelf",
      "type": "AlignSelf"
    },
    {
      "default": null,
      "description": "CSS的margin设置",
      "required": false,
      "identifier": "margin",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"auto\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的padding设置",
      "required": false,
      "identifier": "padding",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的flexWrap设置",
      "required": false,
      "identifier": "flexWrap",
      "type": "FlexWrap"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "hidden",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "在一行第几个时不设置size",
      "required": false,
      "identifier": "ignoreNum",
      "type": "number"
    },
    {
      "default": null,
      "description": "由createAnimation创建的动画对象",
      "required": false,
      "identifier": "animation",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    }
  ],
  "Loading": [
    {
      "default": "加载中",
      "description": "加载中的文本内容",
      "required": false,
      "identifier": "content",
      "type": "string"
    },
    {
      "default": "full",
      "description": "类型",
      "required": false,
      "identifier": "type",
      "type": "\"top\" | \"full\" | \"inline\""
    }
  ],
  "Login": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "code",
      "type": "string"
    }
  ],
  "Menu": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "左边布局的类名",
      "required": false,
      "identifier": "leftCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "左边子项类名",
      "required": false,
      "identifier": "leftItemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "右边布局的类名",
      "required": false,
      "identifier": "rightCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "右边子项类名",
      "required": false,
      "identifier": "rightItemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "菜单数据",
      "required": true,
      "identifier": "data",
      "type": "MenuItem[]"
    },
    {
      "default": null,
      "description": "当前选择的菜单id",
      "required": false,
      "identifier": "current",
      "type": "ID"
    },
    {
      "default": null,
      "description": "当前选择的菜单id",
      "required": false,
      "identifier": "onChange",
      "type": "(id: ID, children: MenuItem[]) => void"
    },
    {
      "default": null,
      "description": "选择了子项后的事件",
      "required": false,
      "identifier": "onSelect",
      "type": "(item: MenuItem) => void"
    },
    {
      "default": null,
      "description": "适老模式，开启后尺寸会变大",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Native": [
    {
      "default": null,
      "description": "初始数据",
      "required": false,
      "identifier": "initData",
      "type": "Data"
    },
    {
      "default": null,
      "description": "flex模式",
      "required": false,
      "identifier": "flex",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "ref",
      "type": "Ref<NativeInstance>"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "key",
      "type": "Key"
    }
  ],
  "NeedWrap": [
    {
      "default": null,
      "description": "Wrap组件",
      "required": true,
      "identifier": "wrap",
      "type": "ComponentType<P>"
    },
    {
      "default": null,
      "description": "Wrap组件的props",
      "required": false,
      "identifier": "wrapProps",
      "type": "unknown"
    },
    {
      "default": null,
      "description": "是否需要wrap",
      "required": true,
      "identifier": "need",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "NoData": [
    {
      "default": null,
      "description": "当图片载入完毕时触发",
      "required": false,
      "identifier": "onLoad",
      "type": "(e: Event) => void"
    },
    {
      "default": null,
      "description": "当错误发生时触发",
      "required": false,
      "identifier": "onError",
      "type": "(e: Event) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "图片资源地址",
      "required": false,
      "identifier": "src",
      "type": "string"
    },
    {
      "default": null,
      "description": "图片裁剪、缩放的模式",
      "required": false,
      "identifier": "mode",
      "type": "\"scaleToFill\" | \"aspectFit\" | \"aspectFill\" | \"widthFix\" | \"top\" | \"bottom\" | \"center\" | \"left\" | \"right\" | \"top left\" | \"top right\" | \"bottom left\" | \"bottom right\""
    }
  ],
  "NoticeBar": [
    {
      "default": null,
      "description": "自定义样式名",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "行内样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "背景色",
      "required": false,
      "identifier": "background",
      "type": "string"
    },
    {
      "default": null,
      "description": "设置图标,传null就是不显示",
      "required": false,
      "identifier": "icon",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "设置左侧标题",
      "required": false,
      "identifier": "title",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "文字颜色",
      "required": false,
      "identifier": "color",
      "type": "string"
    },
    {
      "default": null,
      "description": "消息项",
      "required": false,
      "identifier": "children",
      "type": "ReactNode"
    }
  ],
  "Ocr": [
    {
      "default": null,
      "description": "基础平台token",
      "required": true,
      "identifier": "basicPlatformToken",
      "type": "string"
    }
  ],
  "OpenTypeButton": [
    {
      "default": null,
      "description": null,
      "required": true,
      "identifier": "type",
      "type": "\"getUserInfo\""
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onGetUserInfo",
      "type": "(data: GetUserInfoData) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "OpenWeapp": [
    {
      "default": null,
      "description": "显示的内容，只支持行内样式",
      "required": false,
      "identifier": "children",
      "type": "ReactElement<any, string | JSXElementConstructor<any>>"
    },
    {
      "default": null,
      "description": "web端跳转需要这个，小程序的账号原始id",
      "required": false,
      "identifier": "username",
      "type": "string"
    },
    {
      "default": null,
      "description": "跳转路径",
      "required": false,
      "identifier": "path",
      "type": "string"
    },
    {
      "default": null,
      "description": "小程序端跳转需要这个，小程序的appId",
      "required": false,
      "identifier": "appId",
      "type": "string"
    },
    {
      "default": null,
      "description": "打开成功事件",
      "required": false,
      "identifier": "onLaunch",
      "type": "(e: any) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Page": [
    {
      "default": "false",
      "description": "是否垂直",
      "required": false,
      "identifier": "vertical",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "子元素",
      "required": false,
      "identifier": "children",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "间距大小，字符串可以传入自定义单位，数字默认会转为rpx",
      "required": false,
      "identifier": "size",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "CSS的flex设置",
      "required": false,
      "identifier": "flex",
      "type": "Flex<0 | (string & {})>"
    },
    {
      "default": null,
      "description": "CSS的justify设置",
      "required": false,
      "identifier": "justify",
      "type": "JustifyContent"
    },
    {
      "default": "stretch",
      "description": "CSS的alignItems设置",
      "required": false,
      "identifier": "alignItems",
      "type": "AlignItems"
    },
    {
      "default": null,
      "description": "CSS的alignSelf设置",
      "required": false,
      "identifier": "alignSelf",
      "type": "AlignSelf"
    },
    {
      "default": null,
      "description": "CSS的margin设置",
      "required": false,
      "identifier": "margin",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"auto\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的padding设置",
      "required": false,
      "identifier": "padding",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的flexWrap设置",
      "required": false,
      "identifier": "flexWrap",
      "type": "FlexWrap"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "hidden",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "在一行第几个时不设置size",
      "required": false,
      "identifier": "ignoreNum",
      "type": "number"
    },
    {
      "default": null,
      "description": "由createAnimation创建的动画对象",
      "required": false,
      "identifier": "animation",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "是否防止fixed跑到界面外",
      "required": false,
      "identifier": "overflowFixed",
      "type": "boolean"
    }
  ],
  "PartTitle": [
    {
      "default": null,
      "description": "显示必填的星号",
      "required": false,
      "identifier": "required",
      "type": "boolean"
    },
    {
      "default": "true",
      "description": "是否加粗文字",
      "required": false,
      "identifier": "bold",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "是否填充字体颜色",
      "required": false,
      "identifier": "full",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "左边偏移量，rpx单位",
      "required": false,
      "identifier": "offsetX",
      "type": "number"
    },
    {
      "default": null,
      "description": "适老模式，开启后尺寸会变大",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "标题右侧操作",
      "required": false,
      "identifier": "action",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Picker": [
    {
      "default": null,
      "description": null,
      "required": true,
      "identifier": "value",
      "type": "string | number"
    },
    {
      "default": null,
      "description": null,
      "required": true,
      "identifier": "label",
      "type": "ReactNode"
    }
  ],
  "Platform": [
    {
      "default": null,
      "description": "需要显示的平台",
      "required": true,
      "identifier": "platform",
      "type": "(\"web\" | \"wechat\" | \"ali\" | \"toutiao\" | \"native\")[]"
    }
  ],
  "PreviewImage": [
    {
      "default": null,
      "description": "需要预览的图片链接列表。[2.2.3](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起支持云文件ID。",
      "required": true,
      "identifier": "urls",
      "type": "string[]"
    },
    {
      "default": null,
      "description": "接口调用结束的回调函数（调用成功、失败都会执行）",
      "required": false,
      "identifier": "complete",
      "type": "PreviewImageCompleteCallback"
    },
    {
      "default": null,
      "description": "当前显示图片的链接",
      "required": false,
      "identifier": "current",
      "type": "string"
    },
    {
      "default": null,
      "description": "接口调用失败的回调函数",
      "required": false,
      "identifier": "fail",
      "type": "PreviewImageFailCallback"
    },
    {
      "default": null,
      "description": "需要基础库： `2.13.0`\n\n是否显示长按菜单",
      "required": false,
      "identifier": "showmenu",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "接口调用成功的回调函数",
      "required": false,
      "identifier": "success",
      "type": "PreviewImageSuccessCallback"
    }
  ],
  "PxToRpx": [
    {
      "description": "Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",
      "required": false,
      "identifier": "toString",
      "type": "(radix?: number) => string"
    },
    {
      "default": null,
      "description": "Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",
      "required": true,
      "identifier": "toFixed",
      "type": "(fractionDigits?: number) => string"
    },
    {
      "default": null,
      "description": "Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",
      "required": true,
      "identifier": "toExponential",
      "type": "(fractionDigits?: number) => string"
    },
    {
      "default": null,
      "description": "Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",
      "required": true,
      "identifier": "toPrecision",
      "type": "(precision?: number) => string"
    },
    {
      "description": "Returns the primitive value of the specified object.",
      "required": false,
      "identifier": "valueOf",
      "type": "() => number"
    },
    {
      "description": "Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",
      "required": false,
      "identifier": "toLocaleString",
      "type": "(locales?: string | string[], options?: NumberFormatOptions) => string"
    }
  ],
  "QrCode": [
    {
      "default": null,
      "description": "二维码内容",
      "required": true,
      "identifier": "content",
      "type": "string"
    },
    {
      "default": null,
      "description": "二维码码的颜色",
      "required": false,
      "identifier": "darkColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "二维码背景颜色",
      "required": false,
      "identifier": "lightColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "设置二维码回调",
      "required": false,
      "identifier": "onSetSrc",
      "type": "(src: string) => void"
    },
    {
      "default": null,
      "description": "长按保存",
      "required": false,
      "identifier": "longTapSave",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "当图片载入完毕时触发",
      "required": false,
      "identifier": "onLoad",
      "type": "(e: Event) => void"
    },
    {
      "default": null,
      "description": "当错误发生时触发",
      "required": false,
      "identifier": "onError",
      "type": "(e: Event) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "图片资源地址",
      "required": false,
      "identifier": "src",
      "type": "string"
    },
    {
      "default": null,
      "description": "图片裁剪、缩放的模式",
      "required": false,
      "identifier": "mode",
      "type": "\"scaleToFill\" | \"aspectFit\" | \"aspectFill\" | \"widthFix\" | \"top\" | \"bottom\" | \"center\" | \"left\" | \"right\" | \"top left\" | \"top right\" | \"bottom left\" | \"bottom right\""
    }
  ],
  "Radio": [
    {
      "default": "label",
      "description": "radio内容",
      "required": false,
      "identifier": "children",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "当前是否选中",
      "required": false,
      "identifier": "checked",
      "type": "boolean"
    },
    {
      "default": "value",
      "description": "radio值",
      "required": false,
      "identifier": "value",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "radio框style",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "onchange方法",
      "required": false,
      "identifier": "onChange",
      "type": "(checked: boolean, v?: string | number) => void"
    },
    {
      "default": null,
      "description": "文字颜色",
      "required": false,
      "identifier": "color",
      "type": "string"
    },
    {
      "default": null,
      "description": "默认背景色",
      "required": false,
      "identifier": "backgroundColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "选中的文字颜色",
      "required": false,
      "identifier": "activeColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "选中的背景颜色",
      "required": false,
      "identifier": "activeBackgroundColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "type样式",
      "required": false,
      "identifier": "type",
      "type": "\"normal\" | \"button\""
    },
    {
      "default": null,
      "description": "类名",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "选择的类名",
      "required": false,
      "identifier": "activeCls",
      "type": "string"
    },
    {
      "default": "false",
      "description": "disabled",
      "required": false,
      "identifier": "disabled",
      "type": "boolean"
    }
  ],
  "Rate": [
    {
      "default": null,
      "description": "当前评分值",
      "required": false,
      "identifier": "value",
      "type": "number"
    },
    {
      "default": null,
      "description": "初始值",
      "required": false,
      "identifier": "defaultValue",
      "type": "number"
    },
    {
      "default": null,
      "description": "是否禁用",
      "required": false,
      "identifier": "disabled",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "图标间距",
      "required": false,
      "identifier": "gutter",
      "type": "string"
    },
    {
      "default": null,
      "description": "图标大小",
      "required": false,
      "identifier": "size",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "评分变化回调",
      "required": false,
      "identifier": "onChange",
      "type": "(val: number) => void"
    },
    {
      "default": "'kq-xingxing'",
      "description": "icon图标的名字",
      "required": false,
      "identifier": "iconName",
      "type": "IconFontNames"
    },
    {
      "default": "5",
      "description": "最大评分",
      "required": false,
      "identifier": "maxValue",
      "type": "number"
    },
    {
      "default": "主题色",
      "description": "评分选中颜色",
      "required": false,
      "identifier": "activeColor",
      "type": "string"
    },
    {
      "default": "#ccc",
      "description": "评分未选中颜色",
      "required": false,
      "identifier": "defaultColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "自定义样式",
      "required": false,
      "identifier": "renderItem",
      "type": "(params: { actived?: boolean; index: number; maxValue: number; }) => ReactElement<any, string | JSXElementConstructor<any>>"
    }
  ],
  "ReInput": [
    {
      "default": null,
      "description": "值",
      "required": false,
      "identifier": "value",
      "type": "string"
    },
    {
      "default": null,
      "description": "输入事件",
      "required": false,
      "identifier": "onChange",
      "type": "(value?: string) => void"
    },
    {
      "default": null,
      "description": "确认事件",
      "required": false,
      "identifier": "onConfirm",
      "type": "(value?: string) => void"
    },
    {
      "default": null,
      "description": "如果 textarea 是在一个 position:fixed 的区域，需要显示指定属性 fixed 为 true",
      "required": false,
      "identifier": "flex",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "指定光标与键盘的距离。取textarea距离底部的距离和cursor-spacing指定的距离的最小值作为光标与键盘的距离",
      "required": false,
      "identifier": "cursorSpacing",
      "type": "number"
    },
    {
      "default": null,
      "description": "是否显示键盘上方带有”完成“按钮那一栏",
      "required": false,
      "identifier": "showConfirmBar",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "键盘弹起时，是否自动上推页面",
      "required": false,
      "identifier": "adjustPosition",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "是否去掉 iOS 下的默认内边距",
      "required": false,
      "identifier": "disableDefaultPadding",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "点击键盘右下角按钮时是否保持键盘不收起",
      "required": false,
      "identifier": "confirmHold",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "确认类型",
      "required": false,
      "identifier": "confirmType",
      "type": "string"
    },
    {
      "default": null,
      "description": "占位字符类名",
      "required": false,
      "identifier": "placeholderClassName",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onFocus",
      "type": "((e: Event) => void) & ((event: Event) => void)"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onBlur",
      "type": "((e: Event) => void) & ((event: Event) => void)"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "输入框的初始内容",
      "required": false,
      "identifier": "defaultValue",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "name",
      "type": "string"
    },
    {
      "default": null,
      "description": "input 的类型",
      "required": false,
      "identifier": "type",
      "type": "\"number\" | \"text\" | \"digit\" | \"idcard\""
    },
    {
      "default": null,
      "description": "是否是密码类型",
      "required": false,
      "identifier": "password",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "输入框为空时占位符",
      "required": false,
      "identifier": "placeholder",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "placeholderStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "是否禁用",
      "required": false,
      "identifier": "disabled",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "最大输入长度，设置为 -1 的时候不限制最大长度",
      "required": false,
      "identifier": "maxLength",
      "type": "number"
    },
    {
      "default": null,
      "description": "获取焦点",
      "required": false,
      "identifier": "focus",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "是否自动增高，设置auto-height时，style.height不生效",
      "required": false,
      "identifier": "autoHeight",
      "type": "boolean"
    }
  ],
  "ReTextarea": [
    {
      "default": null,
      "description": "值",
      "required": false,
      "identifier": "value",
      "type": "string"
    },
    {
      "default": null,
      "description": "输入事件",
      "required": false,
      "identifier": "onChange",
      "type": "(value?: string) => void"
    },
    {
      "default": null,
      "description": "确认事件",
      "required": false,
      "identifier": "onConfirm",
      "type": "(value?: string) => void"
    },
    {
      "default": null,
      "description": "如果 textarea 是在一个 position:fixed 的区域，需要显示指定属性 fixed 为 true",
      "required": false,
      "identifier": "flex",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "指定光标与键盘的距离。取textarea距离底部的距离和cursor-spacing指定的距离的最小值作为光标与键盘的距离",
      "required": false,
      "identifier": "cursorSpacing",
      "type": "number"
    },
    {
      "default": null,
      "description": "是否显示键盘上方带有”完成“按钮那一栏",
      "required": false,
      "identifier": "showConfirmBar",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "键盘弹起时，是否自动上推页面",
      "required": false,
      "identifier": "adjustPosition",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "是否去掉 iOS 下的默认内边距",
      "required": false,
      "identifier": "disableDefaultPadding",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "点击键盘右下角按钮时是否保持键盘不收起",
      "required": false,
      "identifier": "confirmHold",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "确认类型",
      "required": false,
      "identifier": "confirmType",
      "type": "string"
    },
    {
      "default": null,
      "description": "占位字符类名",
      "required": false,
      "identifier": "placeholderClassName",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onFocus",
      "type": "((e: Event) => void) & ((event: Event) => void)"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onBlur",
      "type": "((e: Event) => void) & ((event: Event) => void)"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "输入框的初始内容",
      "required": false,
      "identifier": "defaultValue",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "name",
      "type": "string"
    },
    {
      "default": null,
      "description": "input 的类型",
      "required": false,
      "identifier": "type",
      "type": "\"number\" | \"text\" | \"digit\" | \"idcard\""
    },
    {
      "default": null,
      "description": "是否是密码类型",
      "required": false,
      "identifier": "password",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "输入框为空时占位符",
      "required": false,
      "identifier": "placeholder",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "placeholderStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "是否禁用",
      "required": false,
      "identifier": "disabled",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "最大输入长度，设置为 -1 的时候不限制最大长度",
      "required": false,
      "identifier": "maxLength",
      "type": "number"
    },
    {
      "default": null,
      "description": "获取焦点",
      "required": false,
      "identifier": "focus",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "是否自动增高，设置auto-height时，style.height不生效",
      "required": false,
      "identifier": "autoHeight",
      "type": "boolean"
    }
  ],
  "RichText": [
    {
      "default": null,
      "description": "节点列表/HTML String 1.4.0",
      "required": false,
      "identifier": "nodes",
      "type": "string | any[]"
    },
    {
      "default": null,
      "description": "显示连续空格 2.4.1",
      "required": false,
      "identifier": "space",
      "type": "\"ensp\" | \"emsp\" | \"nbsp\""
    },
    {
      "default": null,
      "description": "组件的样式类: 在对应的 WXSS 中定义的样式类",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "组件的内联样式: 可以动态设置的内联样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "组件是否显示: 所有组件默认显示",
      "required": false,
      "identifier": "hidden",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "动画对象: 由`wx.createAnimation`创建",
      "required": false,
      "identifier": "animation",
      "type": "Record<string, any>[]"
    },
    {
      "default": null,
      "description": "点击时触发",
      "required": false,
      "identifier": "onClick",
      "type": "(event: TouchEvent<Touch>) => void"
    },
    {
      "default": null,
      "description": "手指触摸后，超过350ms再离开，如果指定了事件回调函数并触发了这个事件，tap事件将不被触发",
      "required": false,
      "identifier": "onLongPress",
      "type": "(event: TouchEvent<Touch>) => void"
    },
    {
      "default": null,
      "description": "会在 WXSS transition 或 wx.createAnimation 动画结束后触发",
      "required": false,
      "identifier": "onTransitionEnd",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "会在一个 WXSS animation 动画开始时触发",
      "required": false,
      "identifier": "onAnimationStart",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "会在一个 WXSS animation 一次迭代结束时触发",
      "required": false,
      "identifier": "onAnimationiteration",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "会在一个 WXSS animation 动画完成时触发",
      "required": false,
      "identifier": "onAnimationEnd",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "在支持 3D Touch 的 iPhone 设备，重按时会触发",
      "required": false,
      "identifier": "onTouchForceChange",
      "type": "(event: TouchEvent<Touch>) => void"
    },
    {
      "default": null,
      "description": "点击时触发同时阻止事件冒泡",
      "required": false,
      "identifier": "catchClick",
      "type": "(event: any) => any"
    }
  ],
  "Rotate": [
    {
      "default": null,
      "description": "旋转角度",
      "required": false,
      "identifier": "angle",
      "type": "number"
    },
    {
      "default": null,
      "description": "是否旋转",
      "required": false,
      "identifier": "run",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "RpxToPx": [
    {
      "description": "Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",
      "required": false,
      "identifier": "toString",
      "type": "(radix?: number) => string"
    },
    {
      "default": null,
      "description": "Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",
      "required": true,
      "identifier": "toFixed",
      "type": "(fractionDigits?: number) => string"
    },
    {
      "default": null,
      "description": "Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",
      "required": true,
      "identifier": "toExponential",
      "type": "(fractionDigits?: number) => string"
    },
    {
      "default": null,
      "description": "Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",
      "required": true,
      "identifier": "toPrecision",
      "type": "(precision?: number) => string"
    },
    {
      "description": "Returns the primitive value of the specified object.",
      "required": false,
      "identifier": "valueOf",
      "type": "() => number"
    },
    {
      "description": "Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",
      "required": false,
      "identifier": "toLocaleString",
      "type": "(locales?: string | string[], options?: NumberFormatOptions) => string"
    }
  ],
  "Search": [
    {
      "default": null,
      "description": "显示搜索按钮",
      "required": false,
      "identifier": "showBtn",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "搜索按钮类名",
      "required": false,
      "identifier": "btnCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "图标的颜色",
      "required": false,
      "identifier": "iconColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "输入框wrap类名",
      "required": false,
      "identifier": "inputWrapCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "输入框类名",
      "required": false,
      "identifier": "inputCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "适老模式，开启后不同type的按钮文字和尺寸都会变大",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "搜索按钮样式",
      "required": false,
      "identifier": "btnStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "输入框wrap样式",
      "required": false,
      "identifier": "inputWrapStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "值",
      "required": false,
      "identifier": "value",
      "type": "string"
    },
    {
      "default": null,
      "description": "输入事件",
      "required": false,
      "identifier": "onChange",
      "type": "(value?: string) => void"
    },
    {
      "default": null,
      "description": "确认事件",
      "required": false,
      "identifier": "onConfirm",
      "type": "(value?: string) => void"
    },
    {
      "default": null,
      "description": "如果 textarea 是在一个 position:fixed 的区域，需要显示指定属性 fixed 为 true",
      "required": false,
      "identifier": "flex",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "指定光标与键盘的距离。取textarea距离底部的距离和cursor-spacing指定的距离的最小值作为光标与键盘的距离",
      "required": false,
      "identifier": "cursorSpacing",
      "type": "number"
    },
    {
      "default": null,
      "description": "是否显示键盘上方带有”完成“按钮那一栏",
      "required": false,
      "identifier": "showConfirmBar",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "键盘弹起时，是否自动上推页面",
      "required": false,
      "identifier": "adjustPosition",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "是否去掉 iOS 下的默认内边距",
      "required": false,
      "identifier": "disableDefaultPadding",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "点击键盘右下角按钮时是否保持键盘不收起",
      "required": false,
      "identifier": "confirmHold",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "确认类型",
      "required": false,
      "identifier": "confirmType",
      "type": "string"
    },
    {
      "default": null,
      "description": "占位字符类名",
      "required": false,
      "identifier": "placeholderClassName",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onFocus",
      "type": "((e: Event) => void) & ((event: Event) => void)"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onBlur",
      "type": "((e: Event) => void) & ((event: Event) => void)"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "输入框的初始内容",
      "required": false,
      "identifier": "defaultValue",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "name",
      "type": "string"
    },
    {
      "default": null,
      "description": "input 的类型",
      "required": false,
      "identifier": "type",
      "type": "\"number\" | \"text\" | \"digit\" | \"idcard\""
    },
    {
      "default": null,
      "description": "是否是密码类型",
      "required": false,
      "identifier": "password",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "输入框为空时占位符",
      "required": false,
      "identifier": "placeholder",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "placeholderStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "是否禁用",
      "required": false,
      "identifier": "disabled",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "最大输入长度，设置为 -1 的时候不限制最大长度",
      "required": false,
      "identifier": "maxLength",
      "type": "number"
    },
    {
      "default": null,
      "description": "获取焦点",
      "required": false,
      "identifier": "focus",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "是否自动增高，设置auto-height时，style.height不生效",
      "required": false,
      "identifier": "autoHeight",
      "type": "boolean"
    }
  ],
  "SelectFiles": [
    {
      "default": null,
      "description": "是否可以多选",
      "required": false,
      "identifier": "multiple",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "限制上传文件类型\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept",
      "required": false,
      "identifier": "accept",
      "type": "string"
    }
  ],
  "SetClipboardData": [
    {
      "default": null,
      "description": "剪贴板的内容",
      "required": true,
      "identifier": "data",
      "type": "string"
    },
    {
      "default": null,
      "description": "接口调用结束的回调函数（调用成功、失败都会执行）",
      "required": false,
      "identifier": "complete",
      "type": "SetClipboardDataCompleteCallback"
    },
    {
      "default": null,
      "description": "接口调用失败的回调函数",
      "required": false,
      "identifier": "fail",
      "type": "SetClipboardDataFailCallback"
    },
    {
      "default": null,
      "description": "接口调用成功的回调函数",
      "required": false,
      "identifier": "success",
      "type": "SetClipboardDataSuccessCallback"
    }
  ],
  "Shadow": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "卡片模式，会带有圆角和背景样式",
      "required": false,
      "identifier": "card",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "阴影颜色",
      "required": false,
      "identifier": "shadowColor",
      "type": "string | false"
    },
    {
      "default": "20",
      "description": "阴影半径",
      "required": false,
      "identifier": "shadowRadius",
      "type": "number"
    },
    {
      "default": null,
      "description": "是否选中",
      "required": false,
      "identifier": "active",
      "type": "boolean"
    }
  ],
  "Sheet": [
    {
      "default": null,
      "description": "是否垂直居中",
      "required": false,
      "identifier": "center",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "contentCls",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "ref",
      "type": "Ref<SheetInstance>"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "key",
      "type": "Key"
    }
  ],
  "ShowFrequentModal": [
    {
      "default": null,
      "description": "获取图形验证码",
      "required": true,
      "identifier": "getImg",
      "type": "() => Promise<string>"
    },
    {
      "default": null,
      "description": "校验图形验证码",
      "required": true,
      "identifier": "validator",
      "type": "(code: string) => Promise<any>"
    },
    {
      "default": null,
      "description": "弹窗title类名",
      "required": false,
      "identifier": "titleCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "验证码类名",
      "required": false,
      "identifier": "imgCls",
      "type": "string"
    },
    {
      "default": "true",
      "description": "显示",
      "required": false,
      "identifier": "showTip",
      "type": "boolean"
    }
  ],
  "ShowToast": [
    {
      "default": null,
      "description": null,
      "required": true,
      "identifier": "title",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "icon",
      "type": "\"success\" | \"none\""
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "mask",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "duration",
      "type": "number"
    }
  ],
  "Skeleton": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "title",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "titleColor",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "backgroundColor",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "active",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "avatar",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "loading",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "image",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "fade",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "paragraph",
      "type": "SkeletonParagraphProps"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "repetitions",
      "type": "number"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "space",
      "type": "number"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "customize",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Space": [
    {
      "default": "false",
      "description": "是否垂直",
      "required": false,
      "identifier": "vertical",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "子元素",
      "required": false,
      "identifier": "children",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "间距大小，字符串可以传入自定义单位，数字默认会转为rpx",
      "required": false,
      "identifier": "size",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "CSS的flex设置",
      "required": false,
      "identifier": "flex",
      "type": "Flex<0 | (string & {})>"
    },
    {
      "default": null,
      "description": "CSS的justify设置",
      "required": false,
      "identifier": "justify",
      "type": "JustifyContent"
    },
    {
      "default": "stretch",
      "description": "CSS的alignItems设置",
      "required": false,
      "identifier": "alignItems",
      "type": "AlignItems"
    },
    {
      "default": null,
      "description": "CSS的alignSelf设置",
      "required": false,
      "identifier": "alignSelf",
      "type": "AlignSelf"
    },
    {
      "default": null,
      "description": "CSS的margin设置",
      "required": false,
      "identifier": "margin",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"auto\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的padding设置",
      "required": false,
      "identifier": "padding",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的flexWrap设置",
      "required": false,
      "identifier": "flexWrap",
      "type": "FlexWrap"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "hidden",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "在一行第几个时不设置size",
      "required": false,
      "identifier": "ignoreNum",
      "type": "number"
    },
    {
      "default": null,
      "description": "由createAnimation创建的动画对象",
      "required": false,
      "identifier": "animation",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "ref",
      "type": "Ref<unknown>"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "key",
      "type": "Key"
    }
  ],
  "Step": [
    {
      "default": null,
      "description": "当前的index",
      "required": true,
      "identifier": "current",
      "type": "number"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "预置的样式",
      "required": false,
      "identifier": "type",
      "type": "\"dashed\" | \"normal\""
    },
    {
      "default": null,
      "description": "子项类名",
      "required": false,
      "identifier": "itemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "子项节点",
      "required": true,
      "identifier": "items",
      "type": "(ReactNode | ((active: boolean) => { icon: ReactNode; text: ReactNode; }))[]"
    },
    {
      "default": null,
      "description": "active状态下的横线类名",
      "required": false,
      "identifier": "activeLineCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "active状态下的item类名",
      "required": false,
      "identifier": "activeItemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "active颜色",
      "required": false,
      "identifier": "activeColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "默认文字或者icon的颜色",
      "required": false,
      "identifier": "defaultColor",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "进度条选择事件，保持跟current一致从1开始",
      "required": false,
      "identifier": "onChoose",
      "type": "(i: number) => void"
    }
  ],
  "Swiper": [
    {
      "default": null,
      "description": null,
      "required": true,
      "identifier": "items",
      "type": "(SwiperItemProps & { node: ReactNode; })[]"
    },
    {
      "default": null,
      "description": "(default: false) 是否显示面板指示点 1.0.0",
      "required": false,
      "identifier": "indicatorDots",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: rgba(0, 0, 0, .3)) 指示点颜色 1.1.0",
      "required": false,
      "identifier": "indicatorColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "(default: #000000) 当前选中的指示点颜色 1.1.0",
      "required": false,
      "identifier": "indicatorActiveColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "(default: false) 是否自动切换 1.0.0",
      "required": false,
      "identifier": "autoplay",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: 0) 当前所在滑块的 index 1.0.0",
      "required": false,
      "identifier": "current",
      "type": "number"
    },
    {
      "default": null,
      "description": "(default: 5000) 自动切换时间间隔 1.0.0",
      "required": false,
      "identifier": "interval",
      "type": "number"
    },
    {
      "default": null,
      "description": "(default: 500) 滑动动画时长 1.0.0",
      "required": false,
      "identifier": "duration",
      "type": "number"
    },
    {
      "default": null,
      "description": "(default: false) 是否采用衔接滑动 1.0.0",
      "required": false,
      "identifier": "circular",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "(default: false) 滑动方向是否为纵向 1.0.0",
      "required": false,
      "identifier": "vertical",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "前边距，可用于露出前一项的一小部分，接受 px 和 rpx 值 1.9.0",
      "required": false,
      "identifier": "previousMargin",
      "type": "string"
    },
    {
      "default": null,
      "description": "后边距，可用于露出后一项的一小部分，接受 px 和 rpx 值 1.9.0",
      "required": false,
      "identifier": "nextMargin",
      "type": "string"
    },
    {
      "default": null,
      "description": "(default: 1) 同时显示的滑块数量 1.9.0",
      "required": false,
      "identifier": "displayMultipleItems",
      "type": "number"
    },
    {
      "default": null,
      "description": "(default: false) 是否跳过未显示的滑块布局，设为 true 可优化复杂情况下的滑动性能，但会丢失隐藏状态滑块的布局信息 1.9.0",
      "required": false,
      "identifier": "skipHiddenItemLayout",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "指定 swiper 切换缓动动画类型 2.6.5",
      "required": false,
      "identifier": "easingFunction",
      "type": "\"default\" | \"linear\" | \"easeInCubic\" | \"easeOutCubic\" | \"easeInOutCubic\""
    },
    {
      "default": null,
      "description": "current 改变时会触发 change 事件，event.detail = {current, source} 1.0.0",
      "required": false,
      "identifier": "onChange",
      "type": "(event: GenericEvent<any>) => any"
    },
    {
      "default": null,
      "description": "swiper-item 的位置发生改变时会触发 transition 事件，event.detail = {dx: dx, dy: dy} 2.4.3",
      "required": false,
      "identifier": "onTransition",
      "type": "(event: GenericEvent<any>) => any"
    },
    {
      "default": null,
      "description": "动画结束时会触发 animationfinish 事件，event.detail 同上 1.9.0",
      "required": false,
      "identifier": "onAnimationFinish",
      "type": "(event: GenericEvent<any>) => any"
    },
    {
      "default": null,
      "description": "当 swiper-item 的个数大于等于 2，关闭 circular 并且开启 previous-margin 或 next-margin 的时候，可以指定这个边距是否应用到第一个、最后一个元素 2.12.1",
      "required": false,
      "identifier": "snapToEdge",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "组件的样式类: 在对应的 WXSS 中定义的样式类",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "组件的内联样式: 可以动态设置的内联样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "组件是否显示: 所有组件默认显示",
      "required": false,
      "identifier": "hidden",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "动画对象: 由`wx.createAnimation`创建",
      "required": false,
      "identifier": "animation",
      "type": "Record<string, any>[]"
    },
    {
      "default": null,
      "description": "点击时触发",
      "required": false,
      "identifier": "onClick",
      "type": "(event: TouchEvent<Touch>) => void"
    },
    {
      "default": null,
      "description": "手指触摸后，超过350ms再离开，如果指定了事件回调函数并触发了这个事件，tap事件将不被触发",
      "required": false,
      "identifier": "onLongPress",
      "type": "(event: TouchEvent<Touch>) => void"
    },
    {
      "default": null,
      "description": "会在 WXSS transition 或 wx.createAnimation 动画结束后触发",
      "required": false,
      "identifier": "onTransitionEnd",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "会在一个 WXSS animation 动画开始时触发",
      "required": false,
      "identifier": "onAnimationStart",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "会在一个 WXSS animation 一次迭代结束时触发",
      "required": false,
      "identifier": "onAnimationiteration",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "会在一个 WXSS animation 动画完成时触发",
      "required": false,
      "identifier": "onAnimationEnd",
      "type": "(event: GenericEvent<any>) => void"
    },
    {
      "default": null,
      "description": "在支持 3D Touch 的 iPhone 设备，重按时会触发",
      "required": false,
      "identifier": "onTouchForceChange",
      "type": "(event: TouchEvent<Touch>) => void"
    },
    {
      "default": null,
      "description": "点击时触发同时阻止事件冒泡",
      "required": false,
      "identifier": "catchClick",
      "type": "(event: any) => any"
    }
  ],
  "Switch": [
    {
      "default": null,
      "description": "是否选择",
      "required": false,
      "identifier": "value",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "默认是否选择",
      "required": false,
      "identifier": "defaultValue",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "是否禁用",
      "required": false,
      "identifier": "disabled",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "组件变化回调",
      "required": false,
      "identifier": "onChange",
      "type": "(val: boolean) => void"
    },
    {
      "default": "主题色",
      "description": "背景颜色",
      "required": false,
      "identifier": "color",
      "type": "string"
    },
    {
      "default": "25",
      "description": "可以控制整个组件的大小（组件高度为两倍fontSize）",
      "required": false,
      "identifier": "fontSize",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "外层样式",
      "required": false,
      "identifier": "className",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "圆的样式",
      "required": false,
      "identifier": "circleCls",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "外层样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Tab": [
    {
      "default": null,
      "description": "标签项",
      "required": true,
      "identifier": "tabs",
      "type": "{ content: ReactNode; index: T; }[]"
    },
    {
      "default": null,
      "description": "样式类名",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "子项类名",
      "required": false,
      "identifier": "itemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "当前子项类名",
      "required": false,
      "identifier": "activeItemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "当前tab的索引",
      "required": false,
      "identifier": "current",
      "type": "unknown"
    },
    {
      "default": null,
      "description": "current改变的事件回调",
      "required": false,
      "identifier": "onChange",
      "type": "(current: T) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "是否是受控模式",
      "required": false,
      "identifier": "control",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "类型",
      "required": false,
      "identifier": "type",
      "type": "\"card\""
    }
  ],
  "TabBar": [
    {
      "default": null,
      "description": "自定义样式名",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "行内样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "文字颜色",
      "required": false,
      "identifier": "color",
      "type": "string"
    },
    {
      "default": null,
      "description": "选中后文字颜色",
      "required": false,
      "identifier": "activeColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "当前位置索引",
      "required": false,
      "identifier": "current",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "tabBar数据",
      "required": true,
      "identifier": "items",
      "type": "TabBarItemProps[]"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onChange",
      "type": "(current: string | number) => void"
    }
  ],
  "Table": [
    {
      "default": null,
      "description": "表格数据",
      "required": false,
      "identifier": "dataSource",
      "type": "DataSource<T>"
    },
    {
      "default": null,
      "description": "表格列",
      "required": false,
      "identifier": "columns",
      "type": "Column<T>[]"
    },
    {
      "default": null,
      "description": "头部类名",
      "required": false,
      "identifier": "headerCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "头部样式",
      "required": false,
      "identifier": "headerStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "单元格类名",
      "required": false,
      "identifier": "itemCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "单元格样式",
      "required": false,
      "identifier": "itemStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "body里的行类名",
      "required": false,
      "identifier": "rowCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "body里的行样式",
      "required": false,
      "identifier": "rowStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "body类名",
      "required": false,
      "identifier": "bodyCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "body样式",
      "required": false,
      "identifier": "bodyStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "noData组件类名",
      "required": false,
      "identifier": "noDataCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "noData组件样式",
      "required": false,
      "identifier": "noDataStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "是否加载中",
      "required": false,
      "identifier": "loading",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "阴影props，设置为false不显示",
      "required": false,
      "identifier": "shadow",
      "type": "false | Props"
    },
    {
      "default": null,
      "description": "双行的高亮颜色",
      "required": false,
      "identifier": "doubleColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "文字对齐",
      "required": false,
      "identifier": "align",
      "type": "\"center\" | \"between\""
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Tag": [
    {
      "default": "brand-primary",
      "description": "状态颜色",
      "required": false,
      "identifier": "color",
      "type": "string"
    },
    {
      "default": "false",
      "description": "透明底色",
      "required": false,
      "identifier": "ghost",
      "type": "boolean"
    },
    {
      "default": "false",
      "description": "非半圆角",
      "required": false,
      "identifier": "block",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    }
  ],
  "Tile": [
    {
      "default": null,
      "description": "背景色",
      "required": false,
      "identifier": "backgroundColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "文字",
      "required": true,
      "identifier": "title",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "子标题",
      "required": false,
      "identifier": "subtitle",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "图片",
      "required": false,
      "identifier": "image",
      "type": "string"
    },
    {
      "default": null,
      "description": "大小",
      "required": false,
      "identifier": "size",
      "type": "\"large\" | \"small\""
    },
    {
      "default": null,
      "description": "白色文字",
      "required": false,
      "identifier": "light",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "标签",
      "required": false,
      "identifier": "tag",
      "type": "ReactNode"
    },
    {
      "default": "false",
      "description": "是否垂直",
      "required": false,
      "identifier": "vertical",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "子元素",
      "required": false,
      "identifier": "children",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "CSS的flex设置",
      "required": false,
      "identifier": "flex",
      "type": "Flex<0 | (string & {})>"
    },
    {
      "default": null,
      "description": "CSS的justify设置",
      "required": false,
      "identifier": "justify",
      "type": "JustifyContent"
    },
    {
      "default": "stretch",
      "description": "CSS的alignItems设置",
      "required": false,
      "identifier": "alignItems",
      "type": "AlignItems"
    },
    {
      "default": null,
      "description": "CSS的alignSelf设置",
      "required": false,
      "identifier": "alignSelf",
      "type": "AlignSelf"
    },
    {
      "default": null,
      "description": "CSS的margin设置",
      "required": false,
      "identifier": "margin",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"auto\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的padding设置",
      "required": false,
      "identifier": "padding",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的flexWrap设置",
      "required": false,
      "identifier": "flexWrap",
      "type": "FlexWrap"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "hidden",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "在一行第几个时不设置size",
      "required": false,
      "identifier": "ignoreNum",
      "type": "number"
    },
    {
      "default": null,
      "description": "由createAnimation创建的动画对象",
      "required": false,
      "identifier": "animation",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    }
  ],
  "Tip": [
    {
      "default": null,
      "description": "提示项",
      "required": true,
      "identifier": "items",
      "type": "ReactNode[]"
    },
    {
      "default": null,
      "description": "文字类名",
      "required": false,
      "identifier": "textCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "图标类名",
      "required": false,
      "identifier": "iconCls",
      "type": "string"
    },
    {
      "default": "温馨提示：",
      "description": "提示标题",
      "required": false,
      "identifier": "title",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "标题类名",
      "required": false,
      "identifier": "titleCls",
      "type": "string"
    },
    {
      "default": "#FABD52",
      "description": "图标颜色",
      "required": false,
      "identifier": "iconColor",
      "type": "string"
    },
    {
      "default": "kq-tip",
      "description": "图标",
      "required": false,
      "identifier": "icon",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "适老模式，开启后尺寸会变大",
      "required": false,
      "identifier": "elderly",
      "type": "boolean"
    },
    {
      "default": "false",
      "description": "是否垂直",
      "required": false,
      "identifier": "vertical",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "子元素",
      "required": false,
      "identifier": "children",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "间距大小，字符串可以传入自定义单位，数字默认会转为rpx",
      "required": false,
      "identifier": "size",
      "type": "string | number"
    },
    {
      "default": null,
      "description": "CSS的flex设置",
      "required": false,
      "identifier": "flex",
      "type": "Flex<0 | (string & {})>"
    },
    {
      "default": null,
      "description": "CSS的justify设置",
      "required": false,
      "identifier": "justify",
      "type": "JustifyContent"
    },
    {
      "default": "stretch",
      "description": "CSS的alignItems设置",
      "required": false,
      "identifier": "alignItems",
      "type": "AlignItems"
    },
    {
      "default": null,
      "description": "CSS的alignSelf设置",
      "required": false,
      "identifier": "alignSelf",
      "type": "AlignSelf"
    },
    {
      "default": null,
      "description": "CSS的margin设置",
      "required": false,
      "identifier": "margin",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"auto\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的padding设置",
      "required": false,
      "identifier": "padding",
      "type": "number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | (string & {})"
    },
    {
      "default": null,
      "description": "CSS的flexWrap设置",
      "required": false,
      "identifier": "flexWrap",
      "type": "FlexWrap"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "hidden",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "在一行第几个时不设置size",
      "required": false,
      "identifier": "ignoreNum",
      "type": "number"
    },
    {
      "default": null,
      "description": "由createAnimation创建的动画对象",
      "required": false,
      "identifier": "animation",
      "type": "any"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    }
  ],
  "TransferChange": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onChange",
      "type": "(value: any) => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "value",
      "type": "any"
    },
    {
      "default": null,
      "description": "内置模式",
      "required": false,
      "identifier": "mode",
      "type": "\"array\" | \"split\" | \"date\" | \"time\" | \"JSON\" | \"city\""
    },
    {
      "default": null,
      "description": "当mode是date时可以用",
      "required": false,
      "identifier": "dateFormat",
      "type": "string"
    }
  ],
  "UploadFile": [
    {
      "default": null,
      "description": "要上传文件资源的路径 (本地路径)",
      "required": true,
      "identifier": "filePath",
      "type": "string"
    },
    {
      "default": null,
      "description": "文件对应的 key，开发者在服务端可以通过这个 key 获取文件的二进制内容",
      "required": true,
      "identifier": "name",
      "type": "string"
    },
    {
      "default": null,
      "description": "开发者服务器地址",
      "required": true,
      "identifier": "url",
      "type": "string"
    },
    {
      "default": null,
      "description": "接口调用结束的回调函数（调用成功、失败都会执行）",
      "required": false,
      "identifier": "complete",
      "type": "UploadFileCompleteCallback"
    },
    {
      "default": null,
      "description": "接口调用失败的回调函数",
      "required": false,
      "identifier": "fail",
      "type": "UploadFileFailCallback"
    },
    {
      "default": null,
      "description": "HTTP 请求中其他额外的 form data",
      "required": false,
      "identifier": "formData",
      "type": "any"
    },
    {
      "default": null,
      "description": "HTTP 请求 Header，Header 中不能设置 Referer",
      "required": false,
      "identifier": "header",
      "type": "any"
    },
    {
      "default": null,
      "description": "接口调用成功的回调函数",
      "required": false,
      "identifier": "success",
      "type": "UploadFileSuccessCallback"
    },
    {
      "default": null,
      "description": "需要基础库： `2.10.0`\n\n超时时间，单位为毫秒",
      "required": false,
      "identifier": "timeout",
      "type": "number"
    }
  ],
  "UploadImg": [
    {
      "default": "1",
      "description": "图片数量",
      "required": false,
      "identifier": "length",
      "type": "number"
    },
    {
      "default": "false",
      "description": "是否可以多选",
      "required": false,
      "identifier": "multiple",
      "type": "boolean"
    },
    {
      "default": null,
      "description": "上传方法",
      "required": true,
      "identifier": "uploadFn",
      "type": "(file: File) => Promise<string>"
    },
    {
      "default": null,
      "description": "上传文件最大大小\n计算方式 MB * 1024 * 1024 如：1M 写做：1 * 1024 * 1024",
      "required": false,
      "identifier": "maxSize",
      "type": "number"
    },
    {
      "default": null,
      "description": "上传文件过大报错",
      "required": false,
      "identifier": "onMaxError",
      "type": "() => void"
    },
    {
      "default": null,
      "description": "上传文件之前",
      "required": false,
      "identifier": "beforeUpload",
      "type": "(file: File) => boolean | Promise<File>"
    },
    {
      "default": null,
      "description": "上传上传报错",
      "required": false,
      "identifier": "onError",
      "type": "(value: string) => void"
    },
    {
      "default": null,
      "description": "value值",
      "required": false,
      "identifier": "value",
      "type": "string[]"
    },
    {
      "default": null,
      "description": "onChange事件",
      "required": false,
      "identifier": "onChange",
      "type": "(value?: string[]) => void"
    }
  ],
  "UseViewSize": [
    {
      "description": "Returns a string representation of a string.",
      "required": false,
      "identifier": "toString",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",
      "required": true,
      "identifier": "charAt",
      "type": "(pos: number) => string"
    },
    {
      "default": null,
      "description": "Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",
      "required": true,
      "identifier": "charCodeAt",
      "type": "(index: number) => number"
    },
    {
      "default": null,
      "description": "Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",
      "required": true,
      "identifier": "concat",
      "type": "(...strings: string[]) => string"
    },
    {
      "default": null,
      "description": "Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",
      "required": true,
      "identifier": "indexOf",
      "type": "(searchString: string, position?: number) => number"
    },
    {
      "default": null,
      "description": "Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",
      "required": true,
      "identifier": "lastIndexOf",
      "type": "(searchString: string, position?: number) => number"
    },
    {
      "default": null,
      "description": "Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",
      "required": true,
      "identifier": "localeCompare",
      "type": "{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"
    },
    {
      "default": null,
      "description": "Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",
      "required": true,
      "identifier": "match",
      "type": "{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"
    },
    {
      "default": null,
      "description": "Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",
      "required": true,
      "identifier": "replace",
      "type": "{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"
    },
    {
      "default": null,
      "description": "Finds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",
      "required": true,
      "identifier": "search",
      "type": "{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"
    },
    {
      "default": null,
      "description": "Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.",
      "required": true,
      "identifier": "slice",
      "type": "(start?: number, end?: number) => string"
    },
    {
      "default": null,
      "description": "Split a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",
      "required": true,
      "identifier": "split",
      "type": "{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"
    },
    {
      "default": null,
      "description": "Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.",
      "required": true,
      "identifier": "substring",
      "type": "(start: number, end?: number) => string"
    },
    {
      "default": null,
      "description": "Converts all the alphabetic characters in a string to lowercase.",
      "required": true,
      "identifier": "toLowerCase",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",
      "required": true,
      "identifier": "toLocaleLowerCase",
      "type": "(locales?: string | string[]) => string"
    },
    {
      "default": null,
      "description": "Converts all the alphabetic characters in a string to uppercase.",
      "required": true,
      "identifier": "toUpperCase",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",
      "required": true,
      "identifier": "toLocaleUpperCase",
      "type": "(locales?: string | string[]) => string"
    },
    {
      "default": null,
      "description": "Removes the leading and trailing white space and line terminator characters from a string.",
      "required": true,
      "identifier": "trim",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns the length of a String object.",
      "required": true,
      "identifier": "length",
      "type": "number"
    },
    {
      "default": null,
      "description": "Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",
      "required": true,
      "identifier": "substr",
      "type": "(from: number, length?: number) => string"
    },
    {
      "description": "Returns the primitive value of the specified object.",
      "required": false,
      "identifier": "valueOf",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",
      "required": true,
      "identifier": "codePointAt",
      "type": "(pos: number) => number"
    },
    {
      "default": null,
      "description": "Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",
      "required": true,
      "identifier": "includes",
      "type": "(searchString: string, position?: number) => boolean"
    },
    {
      "default": null,
      "description": "Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false.",
      "required": true,
      "identifier": "endsWith",
      "type": "(searchString: string, endPosition?: number) => boolean"
    },
    {
      "default": null,
      "description": "Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\nis \"NFC\"\n@param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\nis \"NFC\"",
      "required": true,
      "identifier": "normalize",
      "type": "{ (form: \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\"): string; (form?: string): string; }"
    },
    {
      "default": null,
      "description": "Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",
      "required": true,
      "identifier": "repeat",
      "type": "(count: number) => string"
    },
    {
      "default": null,
      "description": "Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",
      "required": true,
      "identifier": "startsWith",
      "type": "(searchString: string, position?: number) => boolean"
    },
    {
      "default": null,
      "description": "Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@param name",
      "required": true,
      "identifier": "anchor",
      "type": "(name: string) => string"
    },
    {
      "default": null,
      "description": "Returns a `<big>` HTML element",
      "required": true,
      "identifier": "big",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<blink>` HTML element",
      "required": true,
      "identifier": "blink",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<b>` HTML element",
      "required": true,
      "identifier": "bold",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<tt>` HTML element",
      "required": true,
      "identifier": "fixed",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<font>` HTML element and sets the color attribute value",
      "required": true,
      "identifier": "fontcolor",
      "type": "(color: string) => string"
    },
    {
      "default": null,
      "description": "Returns a `<font>` HTML element and sets the size attribute value",
      "required": true,
      "identifier": "fontsize",
      "type": "{ (size: number): string; (size: string): string; }"
    },
    {
      "default": null,
      "description": "Returns an `<i>` HTML element",
      "required": true,
      "identifier": "italics",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns an `<a>` HTML element and sets the href attribute value",
      "required": true,
      "identifier": "link",
      "type": "(url: string) => string"
    },
    {
      "default": null,
      "description": "Returns a `<small>` HTML element",
      "required": true,
      "identifier": "small",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<strike>` HTML element",
      "required": true,
      "identifier": "strike",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<sub>` HTML element",
      "required": true,
      "identifier": "sub",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a `<sup>` HTML element",
      "required": true,
      "identifier": "sup",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Iterator",
      "required": true,
      "identifier": "__@iterator",
      "type": "() => IterableIterator<string>"
    },
    {
      "default": null,
      "description": "Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string's length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is \" \" (U+0020).",
      "required": true,
      "identifier": "padStart",
      "type": "(maxLength: number, fillString?: string) => string"
    },
    {
      "default": null,
      "description": "Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string's length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is \" \" (U+0020).",
      "required": true,
      "identifier": "padEnd",
      "type": "(maxLength: number, fillString?: string) => string"
    },
    {
      "default": null,
      "description": "Removes whitespace from the left end of a string.",
      "required": true,
      "identifier": "trimLeft",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Removes whitespace from the right end of a string.",
      "required": true,
      "identifier": "trimRight",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a copy with leading whitespace removed.",
      "required": true,
      "identifier": "trimStart",
      "type": "() => string"
    },
    {
      "default": null,
      "description": "Returns a copy with trailing whitespace removed.",
      "required": true,
      "identifier": "trimEnd",
      "type": "() => string"
    }
  ],
  "UserAuthorization": [
    {
      "default": null,
      "description": "授权医院",
      "required": true,
      "identifier": "hisName",
      "type": "ReactNode"
    },
    {
      "default": null,
      "description": "医院code，web端授权会用到",
      "required": false,
      "identifier": "hisCode",
      "type": "string"
    },
    {
      "default": null,
      "description": "授权事件",
      "required": true,
      "identifier": "onAuthorization",
      "type": "(data: LoginData & GetUserInfoData) => Promise<any>"
    },
    {
      "default": null,
      "description": "医院logo，设置后将不会显示用户头像",
      "required": false,
      "identifier": "logo",
      "type": "string"
    },
    {
      "default": null,
      "description": "用户协议链接",
      "required": false,
      "identifier": "agreementUrl",
      "type": "string"
    },
    {
      "default": null,
      "description": "首页链接，点击暂不授权将会跳到首页",
      "required": false,
      "identifier": "homeUrl",
      "type": "string"
    }
  ],
  "VersionVariable": [
    {
      "default": null,
      "description": "开发版变量",
      "required": true,
      "identifier": "develop",
      "type": "unknown"
    },
    {
      "default": null,
      "description": "体验版变量",
      "required": true,
      "identifier": "trial",
      "type": "unknown"
    },
    {
      "default": null,
      "description": "正式版变量",
      "required": true,
      "identifier": "release",
      "type": "unknown"
    }
  ],
  "Visible": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onVisible",
      "type": "() => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "onHidden",
      "type": "() => void"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "优化性能",
      "required": false,
      "identifier": "perf",
      "type": "boolean"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "height",
      "type": "number"
    }
  ],
  "WaterMark": [
    {
      "default": null,
      "description": "类名",
      "required": false,
      "identifier": "className",
      "type": "string"
    },
    {
      "default": null,
      "description": "样式",
      "required": false,
      "identifier": "style",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "水印样式",
      "required": false,
      "identifier": "markStyle",
      "type": "CSSProperties"
    },
    {
      "default": null,
      "description": "水印类名",
      "required": false,
      "identifier": "markClassName",
      "type": "string"
    },
    {
      "default": null,
      "description": "水印之间的水平间距",
      "required": false,
      "identifier": "gapX",
      "type": "number"
    },
    {
      "default": null,
      "description": "水印之间的垂直间距",
      "required": false,
      "identifier": "gapY",
      "type": "number"
    },
    {
      "default": null,
      "description": "追加的水印元素的z-index",
      "required": false,
      "identifier": "zIndex",
      "type": "number"
    },
    {
      "default": null,
      "description": "水印的宽度",
      "required": false,
      "identifier": "width",
      "type": "number"
    },
    {
      "default": null,
      "description": "水印的高度",
      "required": false,
      "identifier": "height",
      "type": "number"
    },
    {
      "default": null,
      "description": "水印在canvas 画布上绘制的垂直偏移量，正常情况下，水印绘制在中间位置, 即 offsetTop = gapY / 2",
      "required": false,
      "identifier": "offsetTop",
      "type": "number"
    },
    {
      "default": null,
      "description": "水印在canvas 画布上绘制的水平偏移量, 正常情况下，水印绘制在中间位置, 即 offsetTop = gapX / 2",
      "required": false,
      "identifier": "offsetLeft",
      "type": "number"
    },
    {
      "default": null,
      "description": "水印绘制时，旋转的角度，单位 °",
      "required": false,
      "identifier": "rotate",
      "type": "number"
    },
    {
      "default": null,
      "description": "ClassName 前缀",
      "required": false,
      "identifier": "prefixCls",
      "type": "string"
    },
    {
      "default": null,
      "description": "高清印图片源, 为了高清屏幕显示，建议使用 2倍或3倍图，优先使用图片渲染水印。",
      "required": false,
      "identifier": "image",
      "type": "string"
    },
    {
      "default": null,
      "description": "水印文字内容",
      "required": false,
      "identifier": "content",
      "type": "string"
    },
    {
      "default": null,
      "description": "文字颜色",
      "required": false,
      "identifier": "fontColor",
      "type": "string"
    },
    {
      "default": null,
      "description": "文字样式",
      "required": false,
      "identifier": "fontStyle",
      "type": "\"none\" | \"normal\" | \"italic\" | \"oblique\""
    },
    {
      "default": null,
      "description": "文字族",
      "required": false,
      "identifier": "fontFamily",
      "type": "string"
    },
    {
      "default": null,
      "description": "文字粗细",
      "required": false,
      "identifier": "fontWeight",
      "type": "number | \"normal\" | \"light\" | \"weight\""
    },
    {
      "default": null,
      "description": "文字大小",
      "required": false,
      "identifier": "fontSize",
      "type": "string | number"
    }
  ],
  "WxInit": [
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "apiUrl",
      "type": "string"
    },
    {
      "default": null,
      "description": null,
      "required": false,
      "identifier": "configData",
      "type": "ConfigData"
    }
  ]
}
